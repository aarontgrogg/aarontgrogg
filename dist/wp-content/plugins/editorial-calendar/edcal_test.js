var edcal_test={post:{},testContent:"This is the content of the <b>unit test &#8211 post</b>. <!--more--> This is content after the more tag to make sure we a reading it.",testContent2:"This is the content of the <b>unit test &#8211 post</b>. <!--more--> This is content after the more tag to make sure we a reading it. - CHANGED",testContent3:"This is the content of the <b>unit test &#8211 post</b>. <!--more--> This is content after the more tag to make sure we a reading it. - CHANGED DRAFT",runTests:function(){edcal_test.isDraftsDrawerVisible=edcal.isDraftsDrawerVisible,edcal.setDraftsDrawerVisible(!0,function(){edcal_test.startTests()})},startTests:function(){jQuery("head").append("<link>"),css=jQuery("head").children(":last"),css.attr({rel:"stylesheet",type:"text/css",href:edcal.plugin_url+"/lib/qunit.css"}),jQuery("#wpbody-content .wrap").append('<div id="edcal-qunit"></div>'),jQuery("#edcal-qunit").append('<h1 id="qunit-header">WordPress Editorial Calendar Unit Tests</h1><h2 id="qunit-banner"></h2><div id="qunit-testrunner-toolbar"></div><h2 id="qunit-userAgent"></h2><ol id="qunit-tests"></ol><div id="qunit-fixture">test markup</div>'),edcal_test.moveTests()},getFirstDate:function(){var t=jQuery("#edcal_scrollable").scrollable(),e=t.getVisibleItems();return edcal.getDayFromDayId(e.eq(0).children(".edcal_row").children(".day:first").attr("id"))},getLastDate:function(){var t=jQuery("#edcal_scrollable").scrollable(),e=t.getVisibleItems();return edcal.getDayFromDayId(e.eq(edcal.weeksPref-1).children(".edcal_row").children(".day:last").attr("id"))},moveTests:function(){var t=edcal.nextStartOfWeek(Date.today()).add(-1).weeks();edcal.moveTo(Date.today()),test("Move to today and check visible dates",function(){expect(2),ok(edcal_test.getFirstDate().equals(t.clone()),"firstDate should match "+t),ok(edcal_test.getLastDate().equals(t.clone().add(edcal.weeksPref).weeks().add(-1).days()),"lastDate should match "+t)}),asyncTest("Move 1 week in the future and check visible dates",function(){expect(2),edcal.move(1,!0,function(){ok(edcal_test.getFirstDate().equals(t.clone().add(1).weeks()),"firstDate should match "+t),ok(edcal_test.getLastDate().equals(t.clone().add(edcal.weeksPref).weeks().add(-1).days().add(1).weeks()),"lastDate should match "+t),edcal.move(1,!1,function(){start(),edcal_test.testMoveFourWeeks()})})})},testMoveFourWeeks:function(){var t=edcal.nextStartOfWeek(Date.today()).add(-1).weeks();asyncTest("Move 4 weeks in the future and check visible dates",function(){expect(2),edcal.move(4,!0,function(){ok(edcal_test.getFirstDate().equals(t.clone().add(4).weeks()),"firstDate should match "+t),ok(edcal_test.getLastDate().equals(t.clone().add(edcal.weeksPref).weeks().add(-1).days().add(4).weeks()),"lastDate should match "+t),edcal.move(4,!1,function(){start(),edcal_test.testMoveEightWeeks()})})})},testMoveEightWeeks:function(){var t=edcal.nextStartOfWeek(Date.today()).add(-1).weeks();asyncTest("Move 8 weeks in the past and check visible dates",function(){expect(2),edcal.move(8,!1,function(){ok(edcal_test.getFirstDate().equals(t.clone().add(-8).weeks()),"firstDate should match "+t),ok(edcal_test.getLastDate().equals(t.clone().add(edcal.weeksPref).weeks().add(-1).days().add(-8).weeks()),"lastDate should match "+t),edcal.move(8,!0,function(){start(),edcal_test.testMoveToLast()})})})},testMoveToLast:function(){if("-1"===edcal.lastPostDate)return void edcal_test.testCreatePost();var t=Date.parseExact(edcal.lastPostDate,"ddMMyyyy");edcal.nextStartOfWeek(t).add(-1).weeks(),asyncTest("Move to the last post",function(){expect(1),edcal.moveTo(t),edcal.getPosts(edcal.nextStartOfWeek(t).add(-3).weeks(),edcal.nextStartOfWeek(t).add(edcal.weeksPref+3).weeks(),function(){equals(jQuery("#post-"+edcal.lastPostId).length,1,"The post should be added at "+t.toString(Date.CultureInfo.formatPatterns.longDate)),edcal.moveTo(Date.today()),start(),edcal_test.testCreatePost()})})},testCreatePost:function(){asyncTest("Create a new post",function(){expect(3),edcal_test.post.title="Unit Test Post",edcal_test.post.content=edcal_test.testContent,edcal_test.post.status="draft",edcal_test.post.time="10:00 AM",edcal_test.post.date=Date.today().add(7).days().toString(edcal.internalDateFormat),edcal_test.post.id="0",edcal.savePost(edcal_test.post,!1,!1,function(t){return t.post?(equals(t.post.date,edcal_test.post.date,"The resulting post should have the same date as the request"),equals(t.post.title,edcal_test.post.title,"The resulting post should have the same title as the request"),equals(jQuery("#post-"+t.post.id).length,1,"The post should be added in only one place in the calendar."),edcal_test.post=t.post,start(),void edcal_test.testGetPost()):(ok(!1,"There was an error creating the new post."),void start())})})},testGetPost:function(){asyncTest("Get post information",function(){expect(3),edcal.getPost(edcal_test.post.id,function(t){equals(t.date,edcal_test.post.date,"The resulting post should have the same date as the request"),equals(t.title,edcal_test.post.title,"The resulting post should have the same title as the request"),equals(t.content,edcal_test.testContent,"The resulting post content should be the same as the test post content"),edcal_test.post=t,start(),edcal_test.testMovePost()})})},testMovePost:function(){asyncTest("Change the date of an existing post",function(){expect(2);var t=Date.today().add(8).days().toString(edcal.internalDateFormat);edcal.doDrop(edcal_test.post.date,"post-"+edcal_test.post.id,t,function(e){return e.post?(equals(e.post.date,t,"The resulting post should have the same date as the request"),equals(jQuery("#post-"+e.post.id).length,1,"The post should be added in only one place in the calendar."),edcal_test.post=e.post,start(),void edcal_test.testMovePostOneWeek()):void ok(!1,"There was an error creating the new post.")})})},testMovePostOneWeek:function(){asyncTest("Make a second change to the date of an existing post",function(){expect(2);var t=Date.today().add(22).days().toString(edcal.internalDateFormat);edcal.doDrop(edcal_test.post.date,"post-"+edcal_test.post.id,t,function(e){return e.post?(equals(e.post.date,t,"The resulting post should have the same date as the request"),equals(jQuery("#post-"+e.post.id).length,1,"The post should be added in only one place in the calendar."),edcal_test.post=e.post,start(),void edcal_test.testMovePostDraft()):void ok(!1,"There was an error creating the new post.")})})},testMovePostDraft:function(){asyncTest("Move an existing post to the drafts drawer",function(){expect(2),edcal.doDrop(edcal_test.post.date,"post-"+edcal_test.post.id,edcal.NO_DATE,function(t){return t.post?(equals(t.post.date_gmt,edcal.NO_DATE,"The resulting post should have the same date as the request and it was "+t.post.date),equals(jQuery("#post-"+t.post.id).length,1,"The post should be added in only one place in the calendar."),edcal_test.post=t.post,start(),void edcal_test.testEditPostDraft()):void ok(!1,"There was an error creating the new post.")})})},testEditPostDraft:function(){asyncTest("Edit the content of a draft post",function(){expect(2),edcal_test.post.title="Unit Test Draft Post &#8211 Changed",edcal_test.post.content=edcal_test.testContent3,edcal.savePost(edcal_test.post,!1,!1,function(t){return t.post?(equals(t.post.title,edcal_test.post.title,"The resulting post should have the same title as the request"),equals(jQuery("#post-"+t.post.id).length,1,"The post should be added in only one place in the calendar."),edcal_test.post=t.post,start(),void edcal_test.testMovePostDraftSchedule()):(ok(!1,"There was an error editing the post."),void start())})})},testMovePostDraftSchedule:function(){asyncTest("Move a post from the drafts drawer back to the calendar",function(){expect(2);var t=Date.today().add(23).days().toString(edcal.internalDateFormat);edcal.doDrop(edcal.NO_DATE,"post-"+edcal_test.post.id,t,function(e){return e.post?(equals(e.post.date,t,"The resulting post should have the same date as the request and it was "+e.post.date),equals(jQuery("#post-"+e.post.id).length,1,"The post should be added in only one place in the calendar."),edcal_test.post=e.post,start(),void edcal_test.testEditPost()):void ok(!1,"There was an error creating the new post.")})})},testEditPost:function(){asyncTest("Edit the content of an existing post and mark it as scheduled",function(){expect(2),edcal_test.post.title="Unit Test Post &#8211 Changed",edcal_test.post.content=edcal_test.testContent2,edcal.savePost(edcal_test.post,!1,!0,function(t){return t.post?(equals(t.post.title,edcal_test.post.title,"The resulting post should have the same title as the request"),equals(jQuery("#post-"+t.post.id).length,1,"The post should be added in only one place in the calendar."),edcal_test.post=t.post,start(),void edcal_test.testGetAfterEdit()):(ok(!1,"There was an error editing the post."),void start())})})},testGetAfterEdit:function(){asyncTest("Get post information after editing",function(){expect(3),edcal.getPost(edcal_test.post.id,function(t){equals(t.date,edcal_test.post.date,"The resulting post should have the same date as the request"),equals(t.title,edcal_test.post.title,"The resulting post should have the same title as the request"),equals(t.content,edcal_test.testContent2,"The resulting post content should be the same as the test post content"),edcal_test.post=t,start(),edcal_test.testDateConflict()})})},testDateConflict:function(){asyncTest("Try to change a post date and fail because of a concurrency conflict",function(){expect(2),edcal_test.post.date=Date.today().add(-1).days().toString(edcal.internalDateFormat);var t=Date.today().add(8).days().toString(edcal.internalDateFormat);edcal.changeDate(t,edcal_test.post,function(t){return t.post?(equals(t.error,edcal.CONCURRENCY_ERROR,"This move should show an exception because it is in conflict."),equals(jQuery("#post-"+t.post.id).length,1,"The post should be added in only one place in the calendar."),edcal_test.post=t.post,start(),void edcal_test.testDeletePost()):void ok(!1,"There was an error with the change date conflict.")})})},testDeletePost:function(){asyncTest("Delete the post created for testing",function(){expect(1),edcal.deletePost(edcal_test.post.id,function(t){return t.post?(equals(jQuery("#post-"+t.post.id).length,0,"The post should now be deleted from the calendar."),start(),void edcal_test.testCreateDraftDrawerPost()):(ok(!1,"There was an error creating the new post."),void start())})})},testCreateDraftDrawerPost:function(){asyncTest("Create a new drafts drawer post",function(){expect(2),edcal_test.post.title="Unit Test Drafts Drawer Post",edcal_test.post.content=edcal_test.testContent,edcal_test.post.status="draft",edcal_test.post.time=edcal.NO_DATE,edcal_test.post.date=edcal.NO_DATE,edcal_test.post.id="0",edcal.savePost(edcal_test.post,!1,!1,function(t){return t.post?(equals(t.post.title,edcal_test.post.title,"The resulting post should have the same title as the request"),equals(jQuery("#post-"+t.post.id).length,1,"The post should be added in only one place in the calendar."),edcal_test.post=t.post,start(),void edcal_test.testDeleteDraftDrawerPost()):(ok(!1,"There was an error creating the new post."),void start())})})},testDeleteDraftDrawerPost:function(){asyncTest("Delete the post created for drafts drawer testing",function(){expect(1),edcal.deletePost(edcal_test.post.id,function(t){return t.post?(equals(jQuery("#post-"+t.post.id).length,0,"The post should now be deleted from the calendar."),start(),void edcal_test.finishTests()):(ok(!1,"There was an error creating the new post."),void start())})})},finishTests:function(){edcal_test.isDraftsDrawerVisible||edcal.setDraftsDrawerVisible(!1)}};
<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->


<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.1/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.1/"
>

<channel>
	<title>Practical CSS3</title>
	<link>http://aarontgrogg.com/practicalcss3</link>
	<description>What You Can Use Today and How to Do It. Everywhere.</description>
	<pubDate>Fri, 09 Sep 2011 11:43:19 +0000</pubDate>
	<language>en</language>
	<wp:wxr_version>1.1</wp:wxr_version>
	<wp:base_site_url>http://aarontgrogg.com/</wp:base_site_url>
	<wp:base_blog_url>http://aarontgrogg.com/practicalcss3</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>aarontgrogg</wp:author_login><wp:author_email>aarontgrogg@yahoo.com</wp:author_email><wp:author_display_name><![CDATA[aarontgrogg]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>2</wp:author_id><wp:author_login>test</wp:author_login><wp:author_email>aarontgrogg@gmail.com</wp:author_email><wp:author_display_name><![CDATA[test]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>

	<wp:category><wp:term_id>3</wp:term_id><wp:category_nicename>animation</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[animation]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>4</wp:term_id><wp:category_nicename>background-gradient</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[background-gradient]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>5</wp:term_id><wp:category_nicename>border-radius</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[border-radius]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>6</wp:term_id><wp:category_nicename>box-shadow</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[box-shadow]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>7</wp:term_id><wp:category_nicename>css3</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[css3]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>8</wp:term_id><wp:category_nicename>opacity</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[opacity]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>9</wp:term_id><wp:category_nicename>rgba</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[rgba]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>10</wp:term_id><wp:category_nicename>rotate-text</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[rotate-text]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>11</wp:term_id><wp:category_nicename>text-shadow</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[text-shadow]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>1</wp:term_id><wp:category_nicename>uncategorized</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Uncategorized]]></wp:cat_name></wp:category>

	

	<item>
		<title>fin...</title>
		<link>http://aarontgrogg.com/practicalcss3/fin/</link>
		<pubDate>Fri, 10 Dec 2010 13:30:55 +0000</pubDate>
		<dc:creator>test</dc:creator>
		<guid isPermaLink="false">http://localhost/aarontgrogg/practicalcss3/</guid>
		<description></description>
		<content:encoded><![CDATA[				<p>Putting it all together...</p>
				<ul>
					<li><a href="people-archive">PEOPLE.com Photo Archive</a></li>
				</ul>
				<p>I hope this helped you find a way to start using CSS3 today everywhere you need it.</p>
				<p>I've written a couple pretty extensive posts on this subject that will dig a little deeper into some aspects:
					<ul><li><a href="http://aarontgrogg.com/2010/06/04/cross-browser-css3-yes-even-in-ie6-and-ie7-with-a-little-help-from-ms-filters/">Cross-Browser CSS3 (yes, even in IE6 and IE7),
							with a Little Help from MS Filters</a>
						</li>
						<li><a href="http://aarontgrogg.com/2010/08/13/whats-the-best-way-to-use-css3-today/">Whatâ€™s the Best Way to... Use CSS3 Today</a></li>
					</ul>
				</p>
				<p>There are a <strong>TON</strong> of JS solutions out there and I chose not to investigate them all.  Again, my first goal is to stay as close to the spec as possible, and second goal is to stay as light as possible.  If it <em>can</em> be done without JS, I think it probably <em>should</em> be done without JS.</p>
				<p>The obvious deviations from that statement are the use of:
					<ul><li><a href="http://modernizr.com/">Modernizr</a>, which does not actually "modernize" anything, but provides feature-detection hooks onto which you can hang CSS and JS,</li>
						<li><a href="http://css3pie.com/">CSS3 PIE</a>, which uses an <abbr title="HTML Component">HTC</abbr> file that, once downloaded and cached by the browser, can be used to fix multiple issues, and</li>
						<li><a href="http://ecsstender.com/">eCSStender</a>, which I hope to see grow and become more feature-rich and more stable, and, once the core JS is downloaded and cached by the browser, breaks feature corrections into modules.</li>
					</ul>
				</p>
				<p>And some of you may note that I did not reference <a href="http://code.google.com/p/ie7-js/">Dean Edwards' IE7/8/9 JS</a> anywhere.  Dean's scripts do in fact enhance older versions of IE, but he mostly focuses on selectors and such, which is awesome, and if you need things like <code>parent &gt; child</code>, <code>.multiple.classes</code>, <code>:first-child</code>, etc., (<a href="http://ie7-js.googlecode.com/svn/test/index.html">full list of features</a>), you should definitely check that out too!</p>
				<p>Here are several other (hopefully) useful resources...</p>
				<h2>Inspiration:</h2>
				<dl><dt><a href="http://www.smashingmagazine.com/2010/04/28/css3-solutions-for-internet-explorer/">http://www.smashingmagazine.com/2010/04/28/css3-solutions-for-internet-explorer/</a></dt>
						<dd>Covers a lot of what I cover here, but has a few other twists, well worth the read.</dd>
					<dt><a href="http://blancer.com/tutorials/wp/15301/10-ways-to-make-internet-explorer-act-like-a-modern-browser/">http://blancer.com/tutorials/wp/15301/10-ways-to-make-internet-explorer-act-like-a-modern-browser/</a></dt>
						<dd>Another tutorial on methods for dragging IE into the modern era, this features more third-party solutions, like JS and jQuery plug-ins.</dd>
					<dt><a href="https://github.com/Modernizr/Modernizr/wiki/HTML5-Cross-browser-Polyfills">https://github.com/Modernizr/Modernizr/wiki/HTML5-Cross-browser-Polyfills</a></dt>
						<dd>Fixes, fixes, and more fixes, tons of applications, for everything from HTML5 to CSS3...  Dig in with two spoons!</dd>
					<dt><a href="http://robertnyman.com/2010/04/27/using-css3-transitions-to-create-rich-effects/">http://robertnyman.com/2010/04/27/using-css3-transitions-to-create-rich-effects/</a></dt>
						<dd>A good primer on transitions and transforms, covering all the vendor prefixes.</dd>
				</dl>
				<h2>So, who has what?</h2>
				<dl><dt><a href="http://html5readiness.com/">http://html5readiness.com/</a></dt>
						<dd>Great visual aid displaying which browsers support which HTML5 and CSS3 features.</dd>
					<dt><a href="http://caniuse.com/">http://caniuse.com/</a></dt>
						<dd>An interactive table or index of features and who supports them.</dd>
					<dt><a href="http://www.quirksmode.org/">http://www.quirksmode.org/</a></dt>
						<dd>The <strong>ultimate</strong> source of knowledge when it comes to browser compatibility.</dd>
					<dt><a href="http://www.smashingmagazine.com/2009/10/14/css-differences-in-internet-explorer-6-7-and-8/">http://www.smashingmagazine.com/2009/10/14/css-differences-in-internet-explorer-6-7-and-8/</a></dt>
						<dd>Great Smashing Magazine article about which version of IE can do what (IE7 added a LOT more than I thought it did...)</dd>
					<dt><a href="http://articles.sitepoint.com/article/whats-new-in-ie9">http://articles.sitepoint.com/article/whats-new-in-ie9</a></dt>
						<dd>A good, if not a bit dated, article from SitePoint regarding new features in IE9.</dd>
					<dt><a href="http://www.beautyoftheweb.com/">http://www.beautyoftheweb.com/</a></dt>
						<dd>IE9's page (quite the pompous URL, but okay).  Want to see the <em>real</em> "beauty of the web"? View the source, scroll to the end of the doc, and count the <code>&lt;script&gt;</code> elements...  I'll save you the trouble: 33...  :-)  At least they're at the <em>end</em> of the doc, right?</dd>
					<dt><a href="http://ie.microsoft.com/testdrive/">http://ie.microsoft.com/testdrive/</a></dt>
						<dd>Demos and test to explore IE9 (need to have IE9 installed, which also requires Win7...).</dd>
				</dl>
				<h2>And how do I create all these crazy CSS3 declarations?</h2>
				<dl>
					<dt><a href="http://www.colorzilla.com/gradient-editor/">http://www.colorzilla.com/gradient-editor/</a></dt>
						<dd><strong>AWESOME</strong> gradient generator!  Includes all vendor prefixes <strong>and</strong> filters (though not -ms-filter, it is easy enough to copy filter and alter).
							And, ah, try clicking just below the Stops slider... one click and new Stop created... just like that... nice.
						</dd>
					<dt><a href="http://css3generator.com/">http://css3generator.com/</a></dt>
						<dd>Very easy to grasp CSS generator, gives you all the vendor-specific and the web-standards CSS all at once, along with an occasional IE Filter (though not all you <em>could</em> use).</dd>
					<dt><a href="http://www.css3maker.com/">http://www.css3maker.com/</a></dt>
						<dd>Note that you can use either the drop-down <em>or</em> top-menu.  Gives you all the vendor-specific and the web-standards CSS all at once, but does lack IE Filters.</dd>
					<dt><a href="http://css3please.com/"> http://css3please.com/</a></dt>
						<dd>Best looking generator of the bunch, allows you to edit and see the results, but ignores a few IE Filters.</dd>
					<dt><a href="http://gradients.glrzad.com/"> http://gradients.glrzad.com/</a></dt>
						<dd>A little more difficult (for me) to grasp at first (scroll down to see the tool).</dd>
					<dt><a href="http://westciv.com/tools/"> http://westciv.com/tools/</a></dt>
						<dd>A lot of great tools, really only focuses on -webkit and -moz, though.</dd>
				</dl>
				<br />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>14</wp:post_id>
		<wp:post_date>2010-12-10 08:30:55</wp:post_date>
		<wp:post_date_gmt>2010-12-10 13:30:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>fin</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>10</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>background-gradient</title>
		<link>http://aarontgrogg.com/practicalcss3/background-gradient/</link>
		<pubDate>Tue, 14 Dec 2010 01:04:57 +0000</pubDate>
		<dc:creator>test</dc:creator>
		<guid isPermaLink="false">http://localhost/aarontgrogg/practicalcss3/</guid>
		<description></description>
		<content:encoded><![CDATA[<p><code>background-gradient</code>, probably more than anything, brings the feeling of depth to a page.  And to date, images were how this was done, across the board.  Often very, very large images, because they had to repeat, repeatedly...  I will continue my thread of "is it necessary?", but probably really only for either very subtle, or very small, gradients.  Otherwise, you're really probably stuck with these.</p>
				<p>So, if you <em>do</em> need background gradients, here are ways to do it.</p>
				<h2>The Options</h2>
				<ul><li><h3><a href="internet-explorer-filters">Internet Explorer Filters</a></h3>
						<h4>Pros:</h4>
						<ul><li>Pure, valid CSS, no JS, no HTC, no tricks, no hacks!</li>
							<li>IE8 offers vendor prefix (-ms).</li>
							<li>IE6/7 use non-proprietary <code>filter</code>, so can easily put that into IE-only stylesheet.</li>
							<li>For better or worse, IE6, 7, and 8 are pretty stable as they are, and so it is pretty easy to know which does, and doesn't, do what.</li>
							<li>Easy to target specific browser versions if using HTML5 Boilerplate <code>&lt;head&gt;</code> conditional comments.</li>
						</ul>
						<h4>Cons:</h4>
						<ul><li>Gradient filter goes from "A" to "B", no stops allowed.</li>
							<li>Fairly limited set of <code>filter</code>s, and most look pretty crappy.</li>
							<li><code>filter</code> is invalid, so stylesheets will not validate, if you care about that.</li>
							<li>At least one more line of CSS for each feature...</li>
						</ul>
					</li>
					<li><h3><a href="css3-pie">CSS3 PIE</a></h3>
						<h4>Pros:</h4>
						<ul><li>Able to use color-stops in gradients!</li>
							<li>Eliminates need for IE <code>filter</code>s.</li>
							<li>Translates vendor-prefix gradients, including stops.</li>
							<li>Comes as a single package, which also adds border-radius and drop-shadows to IE (only).</li>
							<li>Is IE-only, so non-IE browsers get no additional weight, and if you add via an IE-only stylesheet, the rest of your stylesheets will validate (if that matters to you).</li>
						</ul>
						<h4>Cons:</h4>
						<ul><li>Comes as a single package, so if you <em>don't</em> need those other features on a page, at 27.6kb, it's a little heavy...</li>
							<li>Because it requires a non-standard <code>behavior</code> for implementation, the stylesheet used to add this will not validate (if that matters to you).</li>
							<li>Implementation requires JS; without JS, nothing happens.</li>
							<li>Not all servers permit HTC files.</li>
						</ul>
					</li>
				</ul>
				<h2>The Bottom-Line</h2>
				<p>As long as you only need a 2-color gradient, I would say pure CSS (meaning IE filters) is always the way to go; if you need color-stops within your gradient, it's going to have to be CSS3 PIE.  Both will break validation, so the only real advantage CSS3 PIE has in this case is being able to <em>not</em> use IE filters, which is really not that big of a deal.</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>29</wp:post_id>
		<wp:post_date>2010-12-13 20:04:57</wp:post_date>
		<wp:post_date_gmt>2010-12-14 01:04:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>background-gradient</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2</wp:comment_id>
			<wp:comment_author><![CDATA[aarontgrogg]]></wp:comment_author>
			<wp:comment_author_email>aarontgrogg@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://aarontgrogg.com/</wp:comment_author_url>
			<wp:comment_author_IP>74.108.234.76</wp:comment_author_IP>
			<wp:comment_date>2010-12-21 21:36:36</wp:comment_date>
			<wp:comment_date_gmt>2010-12-22 02:36:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[From none other than <span class="vcard"><a class="url fn" href="http://unstoppablerobotninja.com/" rel="nofollow">Ethan Marcotte</a></span> comes a great <a href="http://24ways.org/2010/everything-you-wanted-to-know-about-gradients" rel="nofollow">24 Ways article about CSS Gradients</a>.

While Ethan's only option for non-Mozilla/WebKit browsers is an image (okay, he does <em>mention</em> IE Filters, but only in passing), it is a really good primer on how those two engines work.

Cheers,
Atg]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1292985397.5423";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"aarontgrogg";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:63:{s:15:"comment_post_ID";s:2:"29";s:14:"comment_author";s:11:"aarontgrogg";s:20:"comment_author_email";s:21:"aarontgrogg@yahoo.com";s:18:"comment_author_url";s:23:"http://aarontgrogg.com/";s:15:"comment_content";s:472:"From none other than <span class="vcard"><a class="url fn" href="http://unstoppablerobotninja.com/">Ethan Marcotte</a></span> comes a great <a href="http://24ways.org/2010/everything-you-wanted-to-know-about-gradients">24 Ways article about CSS Gradients</a>.

While Ethan's only option for non-Mozilla/WebKit browsers is an image (okay, he does <em>mention</em> IE Filters, but only in passing), it is a really good primer on how those two engines work.

Cheers,
Atg";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"1";s:7:"user_ip";s:13:"74.108.234.76";s:10:"user_agent";s:97:"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.6; en-US; rv:1.9.2.13) Gecko/20101203 Firefox/3.6.13";s:8:"referrer";s:57:"http://aarontgrogg.com/practicalcss3/background-gradient/";s:4:"blog";s:36:"http://aarontgrogg.com/practicalcss3";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:57:"http://aarontgrogg.com/practicalcss3/background-gradient/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"passed";s:12:"POST_comment";s:472:"From none other than <span class="vcard"><a class="url fn" href="http://unstoppablerobotninja.com/">Ethan Marcotte</a></span> comes a great <a href="http://24ways.org/2010/everything-you-wanted-to-know-about-gradients">24 Ways article about CSS Gradients</a>.

While Ethan's only option for non-Mozilla/WebKit browsers is an image (okay, he does <em>mention</em> IE Filters, but only in passing), it is a really good primer on how those two engines work.

Cheers,
Atg";s:11:"POST_submit";s:12:"Post Comment";s:20:"POST_comment_post_ID";s:2:"29";s:19:"POST_comment_parent";s:1:"0";s:32:"POST__wp_unfiltered_html_comment";s:10:"2a28191178";s:26:"POST_akismet_comment_nonce";s:10:"12937e8f80";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:35:"/practicalcss3/wp-comments-post.php";s:14:"CONTENT_LENGTH";s:3:"726";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:13:"DOCUMENT_ROOT";s:39:"/home/content/a/a/r/aarontgroggcom/html";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.7";s:20:"HTTP_ACCEPT_ENCODING";s:12:"gzip,deflate";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-us,en;q=0.5";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:11:"HTTP_COOKIE";s:0:"";s:9:"HTTP_HOST";s:15:"aarontgrogg.com";s:15:"HTTP_KEEP_ALIVE";s:3:"115";s:12:"HTTP_REFERER";s:57:"http://aarontgrogg.com/practicalcss3/background-gradient/";s:15:"HTTP_USER_AGENT";s:97:"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.6; en-US; rv:1.9.2.13) Gecko/20101203 Firefox/3.6.13";s:4:"PATH";s:28:"/bin:/usr/bin:/usr/local/bin";s:9:"PATH_INFO";s:21:"/wp-comments-post.php";s:5:"PHPRC";s:39:"/home/content/a/a/r/aarontgroggcom/html";s:12:"QUERY_STRING";s:0:"";s:19:"REDIRECT_SCRIPT_URI";s:57:"http://aarontgrogg.com/practicalcss3/wp-comments-post.php";s:19:"REDIRECT_SCRIPT_URL";s:35:"/practicalcss3/wp-comments-post.php";s:15:"REDIRECT_STATUS";s:3:"200";s:12:"REDIRECT_URL";s:35:"/practicalcss3/wp-comments-post.php";s:11:"REMOTE_ADDR";s:13:"74.108.234.76";s:11:"REMOTE_PORT";s:5:"50482";s:14:"REQUEST_METHOD";s:4:"POST";s:15:"SCRIPT_FILENAME";s:60:"/home/content/a/a/r/aarontgroggcom/html/wp-comments-post.php";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:10:"SCRIPT_URI";s:57:"http://aarontgrogg.com/practicalcss3/wp-comments-post.php";s:10:"SCRIPT_URL";s:35:"/practicalcss3/wp-comments-post.php";s:11:"SERVER_ADDR";s:12:"72.167.232.6";s:12:"SERVER_ADMIN";s:26:"support@supportwebsite.com";s:11:"SERVER_NAME";s:15:"aarontgrogg.com";s:11:"SERVER_PORT";s:2:"80";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:16:"SERVER_SIGNATURE";s:67:"<ADDRESS>Apache/1.3.33 Server at aarontgrogg.com Port 80</ADDRESS>
";s:3:"SPI";s:4:"TRUE";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1292985395";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>22</wp:comment_id>
			<wp:comment_author><![CDATA[aarontgrogg]]></wp:comment_author>
			<wp:comment_author_email>aarontgrogg@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://aarontgrogg.com/</wp:comment_author_url>
			<wp:comment_author_IP>209.251.200.243</wp:comment_author_IP>
			<wp:comment_date>2011-03-16 12:09:35</wp:comment_date>
			<wp:comment_date_gmt>2011-03-16 16:09:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[And for anyone needing to create CSS3 gradient code, the nightmare is (partially) over.

<a href="http://www.colorzilla.com/" rel="nofollow">ColorZilla</a> now offers <a href="http://www.colorzilla.com/gradient-editor/" rel="nofollow">an online gradient creator</a> that nearly exactly mimics PhotoShop.

Open your mock in PS right beside this page and it is nearly one-for-one to create the <code>-moz</code>, <code>-webkit</code>, and IE-filter in one copy-and-paste motion!

Seriously sweet...

Atg]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1300291775.6207";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"aarontgrogg";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:63:{s:15:"comment_post_ID";s:2:"29";s:14:"comment_author";s:11:"aarontgrogg";s:20:"comment_author_email";s:21:"aarontgrogg@yahoo.com";s:18:"comment_author_url";s:23:"http://aarontgrogg.com/";s:15:"comment_content";s:479:"And for anyone needing to create CSS3 gradient code, the nightmare is (partially) over.

<a href="http://www.colorzilla.com/">ColorZilla</a> now offers <a href="http://www.colorzilla.com/gradient-editor/">an online gradient creator</a> that nearly exactly mimics PhotoShop.

Open your mock in PS right beside this page and it is nearly one-for-one to create the <code>-moz</code>, <code>-webkit</code>, and IE-filter in one copy-and-paste motion!

Seriously sweet...

Atg";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"1";s:7:"user_ip";s:15:"209.251.200.243";s:10:"user_agent";s:111:"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2.15) Gecko/20110303 Firefox/3.6.15 (.NET CLR 3.5.30729)";s:8:"referrer";s:57:"http://aarontgrogg.com/practicalcss3/background-gradient/";s:4:"blog";s:36:"http://aarontgrogg.com/practicalcss3";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:57:"http://aarontgrogg.com/practicalcss3/background-gradient/";s:9:"user_role";s:11:"super_admin";s:21:"akismet_comment_nonce";s:6:"passed";s:12:"POST_comment";s:479:"And for anyone needing to create CSS3 gradient code, the nightmare is (partially) over.

<a href="http://www.colorzilla.com/">ColorZilla</a> now offers <a href="http://www.colorzilla.com/gradient-editor/">an online gradient creator</a> that nearly exactly mimics PhotoShop.

Open your mock in PS right beside this page and it is nearly one-for-one to create the <code>-moz</code>, <code>-webkit</code>, and IE-filter in one copy-and-paste motion!

Seriously sweet...

Atg";s:11:"POST_submit";s:12:"Post Comment";s:20:"POST_comment_post_ID";s:2:"29";s:19:"POST_comment_parent";s:1:"0";s:32:"POST__wp_unfiltered_html_comment";s:10:"cf75ae6ed4";s:26:"POST_akismet_comment_nonce";s:10:"62f0fc36ce";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:35:"/practicalcss3/wp-comments-post.php";s:14:"CONTENT_LENGTH";s:3:"729";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:13:"DOCUMENT_ROOT";s:39:"/home/content/a/a/r/aarontgroggcom/html";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.7";s:20:"HTTP_ACCEPT_ENCODING";s:12:"gzip,deflate";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-us,en;q=0.5";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:11:"HTTP_COOKIE";s:0:"";s:9:"HTTP_HOST";s:15:"aarontgrogg.com";s:15:"HTTP_KEEP_ALIVE";s:3:"115";s:12:"HTTP_REFERER";s:57:"http://aarontgrogg.com/practicalcss3/background-gradient/";s:15:"HTTP_USER_AGENT";s:111:"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2.15) Gecko/20110303 Firefox/3.6.15 (.NET CLR 3.5.30729)";s:4:"PATH";s:28:"/bin:/usr/bin:/usr/local/bin";s:9:"PATH_INFO";s:21:"/wp-comments-post.php";s:5:"PHPRC";s:39:"/home/content/a/a/r/aarontgroggcom/html";s:12:"QUERY_STRING";s:0:"";s:19:"REDIRECT_SCRIPT_URI";s:57:"http://aarontgrogg.com/practicalcss3/wp-comments-post.php";s:19:"REDIRECT_SCRIPT_URL";s:35:"/practicalcss3/wp-comments-post.php";s:15:"REDIRECT_STATUS";s:3:"200";s:12:"REDIRECT_URL";s:35:"/practicalcss3/wp-comments-post.php";s:11:"REMOTE_ADDR";s:15:"209.251.200.243";s:11:"REMOTE_PORT";s:5:"34606";s:14:"REQUEST_METHOD";s:4:"POST";s:15:"SCRIPT_FILENAME";s:60:"/home/content/a/a/r/aarontgroggcom/html/wp-comments-post.php";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:10:"SCRIPT_URI";s:57:"http://aarontgrogg.com/practicalcss3/wp-comments-post.php";s:10:"SCRIPT_URL";s:35:"/practicalcss3/wp-comments-post.php";s:11:"SERVER_ADDR";s:12:"72.167.232.6";s:12:"SERVER_ADMIN";s:26:"support@supportwebsite.com";s:11:"SERVER_NAME";s:15:"aarontgrogg.com";s:11:"SERVER_PORT";s:2:"80";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:16:"SERVER_SIGNATURE";s:67:"<ADDRESS>Apache/1.3.33 Server at aarontgrogg.com Port 80</ADDRESS>
";s:3:"SPI";s:4:"TRUE";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1300291773";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29</wp:comment_id>
			<wp:comment_author><![CDATA[aarontgrogg]]></wp:comment_author>
			<wp:comment_author_email>aarontgrogg@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://aarontgrogg.com/</wp:comment_author_url>
			<wp:comment_author_IP>209.251.200.243</wp:comment_author_IP>
			<wp:comment_date>2011-05-12 12:14:03</wp:comment_date>
			<wp:comment_date_gmt>2011-05-12 16:14:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The online ColorZilla (above) has expanded to now include the new WebKit linear-gradient declaration (but still retaining the old for older WebKit browsers), Opera and IE10 declarations.  It also now offers the ability to upload an existing gradient image and get back all the delicious, nutritious, CSS gradient info a growing body deserves!  So, go get your CSS gradient on!!

Now all we need is a PS plug-in that offers-up CSS declarations straight from the PSD...  Anybody out there?

Atg]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1305216843.2582";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"aarontgrogg";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:63:{s:15:"comment_post_ID";s:2:"29";s:14:"comment_author";s:11:"aarontgrogg";s:20:"comment_author_email";s:21:"aarontgrogg@yahoo.com";s:18:"comment_author_url";s:23:"http://aarontgrogg.com/";s:15:"comment_content";s:496:"The online ColorZilla (above) has expanded to now include the new WebKit linear-gradient declaration (but still retaining the old for older WebKit browsers), Opera and IE10 declarations.  It also now offers the ability to upload an existing gradient image and get back all the delicious, nutritious, CSS gradient info a growing body deserves!  So, go get your CSS gradient on!!

Now all we need is a PS plug-in that offers-up CSS declarations straight from the PSD...  Anybody out there?

Atg";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"1";s:7:"user_ip";s:15:"209.251.200.243";s:10:"user_agent";s:111:"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2.17) Gecko/20110420 Firefox/3.6.17 (.NET CLR 3.5.30729)";s:8:"referrer";s:57:"http://aarontgrogg.com/practicalcss3/background-gradient/";s:4:"blog";s:36:"http://aarontgrogg.com/practicalcss3";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:57:"http://aarontgrogg.com/practicalcss3/background-gradient/";s:9:"user_role";s:25:"administrator,super_admin";s:21:"akismet_comment_nonce";s:6:"passed";s:12:"POST_comment";s:496:"The online ColorZilla (above) has expanded to now include the new WebKit linear-gradient declaration (but still retaining the old for older WebKit browsers), Opera and IE10 declarations.  It also now offers the ability to upload an existing gradient image and get back all the delicious, nutritious, CSS gradient info a growing body deserves!  So, go get your CSS gradient on!!

Now all we need is a PS plug-in that offers-up CSS declarations straight from the PSD...  Anybody out there?

Atg";s:11:"POST_submit";s:12:"Post Comment";s:20:"POST_comment_post_ID";s:2:"29";s:19:"POST_comment_parent";s:1:"0";s:32:"POST__wp_unfiltered_html_comment";s:10:"f3543d49ae";s:26:"POST_akismet_comment_nonce";s:10:"7955866b1c";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:35:"/practicalcss3/wp-comments-post.php";s:14:"CONTENT_LENGTH";s:3:"672";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:13:"DOCUMENT_ROOT";s:39:"/home/content/a/a/r/aarontgroggcom/html";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.7";s:20:"HTTP_ACCEPT_ENCODING";s:12:"gzip,deflate";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-us,en;q=0.5";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:11:"HTTP_COOKIE";s:0:"";s:9:"HTTP_HOST";s:15:"aarontgrogg.com";s:15:"HTTP_KEEP_ALIVE";s:3:"115";s:12:"HTTP_REFERER";s:57:"http://aarontgrogg.com/practicalcss3/background-gradient/";s:15:"HTTP_USER_AGENT";s:111:"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2.17) Gecko/20110420 Firefox/3.6.17 (.NET CLR 3.5.30729)";s:4:"PATH";s:28:"/bin:/usr/bin:/usr/local/bin";s:9:"PATH_INFO";s:21:"/wp-comments-post.php";s:5:"PHPRC";s:39:"/home/content/a/a/r/aarontgroggcom/html";s:12:"QUERY_STRING";s:0:"";s:19:"REDIRECT_SCRIPT_URI";s:57:"http://aarontgrogg.com/practicalcss3/wp-comments-post.php";s:19:"REDIRECT_SCRIPT_URL";s:35:"/practicalcss3/wp-comments-post.php";s:15:"REDIRECT_STATUS";s:3:"200";s:12:"REDIRECT_URL";s:35:"/practicalcss3/wp-comments-post.php";s:11:"REMOTE_ADDR";s:15:"209.251.200.243";s:11:"REMOTE_PORT";s:5:"19806";s:14:"REQUEST_METHOD";s:4:"POST";s:15:"SCRIPT_FILENAME";s:60:"/home/content/a/a/r/aarontgroggcom/html/wp-comments-post.php";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:10:"SCRIPT_URI";s:57:"http://aarontgrogg.com/practicalcss3/wp-comments-post.php";s:10:"SCRIPT_URL";s:35:"/practicalcss3/wp-comments-post.php";s:11:"SERVER_ADDR";s:12:"72.167.232.6";s:12:"SERVER_ADMIN";s:26:"support@supportwebsite.com";s:11:"SERVER_NAME";s:15:"aarontgrogg.com";s:11:"SERVER_PORT";s:2:"80";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:16:"SERVER_SIGNATURE";s:67:"<ADDRESS>Apache/1.3.33 Server at aarontgrogg.com Port 80</ADDRESS>
";s:3:"SPI";s:4:"TRUE";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1305216841";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>animation</title>
		<link>http://aarontgrogg.com/practicalcss3/animation/</link>
		<pubDate>Tue, 14 Dec 2010 01:08:03 +0000</pubDate>
		<dc:creator>test</dc:creator>
		<guid isPermaLink="false">http://localhost/aarontgrogg/practicalcss3/</guid>
		<description></description>
		<content:encoded><![CDATA[<style>
div.entry-content div { margin: .75em 0; padding: 10px; border: 3px solid #444; background: #fff; }
#example1 a {
	/* the initial color should be blue */
	color: blue;
	/* what should get the transition (just "color" here), how long the transition should take to complete (1/2 second), and the transition effect (linear) */
	-webkit-transition: color 0.5s linear; /* Safari and Chrome */
	-moz-transition: color 0.5s linear; /* Firefox 4+ */
	-ms-transition: color 0.5s linear; /* IE10+ */
	-o-transition: color 0.5s linear; /* Opera */
	transition: color 0.5s linear; /* W3C */
}
#example1 a:hover {
	/* the hover color should be red */
	color: red;
}
#example2 a {
	/* the initial styles */
	padding: 4px 8px;
	background: #ccc;
	border: 2px solid #333;
	color: #000;
	/* what should effects get the transition ("all", here), how long the transition should take to complete (1/4 second), and the transition effect (ease-in)*/
	-webkit-transition: all 0.25s ease-in; /* Safari and Chrome */
	-moz-transition: all 0.25s ease-in; /* Firefox 4+ */
	-ms-transition: all 0.25s ease-in; /* IE10+ */
	-o-transition: all 0.25s ease-in; /* Opera */
	transition: all 0.25s ease-in; /* W3C */
}
#example2 a:hover {
	/* set the hover styles */
	background: #333;
	border: 2px solid #000;
	color: #eee;
}
#example3 div {border: 0;}
#example3 a {
	/* give the link some base styles */
	display: block;
	width: 150px;
	height: 113px;
	background: #333 url("http://img2.timeinc.net/people/static/i/video/bgPlayVideo.png") no-repeat 50% 50%;
}
#example3 img {
	/* the initial opacity */
	opacity: 1;
	/* what should effects get the transition (just "opacity" here), how long the transition should take to complete (1/2 second), and the transition effect (ease-out) */
	-webkit-transition: opacity 0.5s ease-out; /* Safari and Chrome */
	-moz-transition: opacity 0.5s ease-out; /* Firefox 4+ */
	-ms-transition: opacity 0.5s ease-out; /* IE10+ */
	-o-transition: opacity 0.5s ease-out; /* Opera */
	transition: opacity 0.5s ease-out; /* W3C */
}
html.lte8 #example3 img {
	/* and even though IE6-8 won't get the transition, we still want it to get the opacity change... */
	filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=100);
	zoom: 1; /* 'hasLayout' required for HTC method */
}
#example3 a:hover img {
	/* so on hover, we fade the actual image, so you can see the background image ("Play Video") peaking through */
	opacity: .3;
}
html.lte8 #example3 a:hover img {
	filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=30);
}
</style>
				<p>Okay, this is a little bit of a lie, but only sort of...</p>
				<p>There are some <em>crazy</em> things you can do with transitions and transforms, but the <strong>really</strong> crazy stuff, unless you're working on a WebKit-only project,
					<em>is</em> kind of out of reach for cross-browser projects.  Although all the other major players are lagging behind Safari, Chrome*, Firefox, Opera,
					and even IE9 each have their own vendor prefixes and are working on it:
					<ul>
						<li><a href="https://developer.mozilla.org/web-tech/2008/09/12/css-transforms/">Mozilla Transforms</a> &amp; <a href="https://developer.mozilla.org/en/CSS/CSS_transitions">Transitions</a></li>
						<li><a href="http://dev.opera.com/articles/view/css3-transitions-and-2d-transforms/">Opera Transitions &amp; Transforms</a></li>
						<li><a href="http://msdn.microsoft.com/ie/ff468705.aspx#_CSS3_2D_Transforms">IE9 Transforms</a></li>
					</ul>
				</p>
				<p>(* Although Chrome uses WebKit, just like Safari, Chrome incorporate various WebKit features at a different pace than Safari, so you cannot assume both will have the same support.)</p>
				<p>So, again, it's coming, really, but if we start with fairly simple animations, nothing breaks for those without support, and those with just get a little nicer experience.</p>
				<p>The transitions I'd like to talk about aren't very crazy at all, but they can really "take the edge off" of some every day actions for the browsers that can handle it,
					and for browsers that <em>can't</em>, users are no worse than they are right now (you know, that progressive enhancement thing).
				</p>
				<p>This first one is just a link hover.  Rather than the current "abrupt" from one color to another, you can easily apply a transition that will ease from one color to the other:</p>
<pre>
#example1 a {
	/* the initial color should be blue */
	color: blue;
	/* what should get the transition (just "color" here), how long the transition should take to complete (1/2 second), and the transition effect (linear) */
	-webkit-transition: color 0.5s linear; /* Safari and Chrome */
	-moz-transition: color 0.5s linear; /* Firefox 4+ */
	-ms-transition: color 0.5s linear; /* IE10+ */
	-o-transition: color 0.5s linear; /* Opera */
	transition: color 0.5s linear; /* W3C */
}
#example1 a:hover {
	/* the hover color should be red */
	color: red;
}
</pre>
				<div id="example1">
					<p>Lorem ipsum dolor sit amet, <a href="#">consectetur adipisicing elit</a>, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
				</div>
				<p>Here we again apply a hover transition that, if not supported, will act exactly as it always has, but for those with support, they get a better transition:</p>
<pre>
#example2 a {
	/* the initial styles */
	padding: 4px 8px;
	background: #ccc;
	border: 2px solid #333;
	color: #000;
	/* what should effects get the transition ("all", here), how long the transition should take to complete (1/4 second), and the transition effect (ease-in)*/
	-webkit-transition: all 0.25s ease-in; /* Safari and Chrome */
	-moz-transition: all 0.25s ease-in; /* Firefox 4+ */
	-ms-transition: all 0.25s ease-in; /* IE10+ */
	-o-transition: all 0.25s ease-in; /* Opera */
	transition: all 0.25s ease-in; /* W3C */
}
#example2 a:hover {
	/* set the hover styles */
	background: #333;
	border: 2px solid #000;
	color: #eee;
}
</pre>
				<div id="example2">
					<p><a href="#">Read More</a></p>
					<p><a href="#">Watch Video</a></p>
				</div>
				<p>And here we apply yet another hover transition, borrowed from People.com:</p>
<pre>
&lt;div id="example3"&gt;
	&lt;a href="#"&gt;
		&lt;img width="150" height="113" border="0" alt="Fergie Puts on Her Judge's Hat for 'Avon Voices' | Fergie" src="http://img2.timeinc.net/people/i/2010/video/101213/fergie-150.jpg" /&gt;
	&lt;/a&gt;
&lt;/div&gt;
&lt;style&gt;
#example3 div {border: 0;}
#example3 a {
	/* give the link some base styles */
	display: block;
	width: 150px;
	height: 113px;
	background: #333 url("http://img2.timeinc.net/people/static/i/video/bgPlayVideo.png") no-repeat 50% 50%;
}
#example3 img {
	/* the initial opacity */
	opacity: 1;
	/* what should effects get the transition (just "opacity" here), how long the transition should take to complete (1/2 second), and the transition effect (ease-out) */
	-webkit-transition: opacity 0.5s ease-out; /* Safari and Chrome */
	-moz-transition: opacity 0.5s ease-out; /* Firefox 4+ */
	-ms-transition: opacity 0.5s ease-out; /* IE10+ */
	-o-transition: opacity 0.5s ease-out; /* Opera */
	transition: opacity 0.5s ease-out; /* W3C */
}
html.lte8 #example3 img {
	/* and even though IE6-8 won't get the transition, we still want it to get the opacity change... */
	filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=100);
	zoom: 1; /* 'hasLayout' required for HTC method */
}
#example3 a:hover img {
	/* so on hover, we fade the actual image, so you can see the background image ("Play Video") peaking through */
	opacity: .3;
}
html.lte8 #example3 a:hover img {
	filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=30);
}
&lt;/style&gt;
</pre>
				<div id="example3">
					<a href="#"><img width="150" height="113" border="0" alt="Fergie Puts on Her Judge's Hat for 'Avon Voices' | Fergie" src="http://img2.timeinc.net/people/i/2010/video/101213/fergie-150.jpg"></a>
				</div>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>31</wp:post_id>
		<wp:post_date>2010-12-13 20:08:03</wp:post_date>
		<wp:post_date_gmt>2010-12-14 01:08:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>animation</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>8</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>border-radius</title>
		<link>http://aarontgrogg.com/practicalcss3/border-radius/</link>
		<pubDate>Tue, 14 Dec 2010 01:14:53 +0000</pubDate>
		<dc:creator>test</dc:creator>
		<guid isPermaLink="false">http://localhost/aarontgrogg/practicalcss3/</guid>
		<description></description>
		<content:encoded><![CDATA[<code>border-radius</code> is absolutely one of those styles that I would seriously consider simply dropping for older browsers, if possible.  It usually lends very little to the user, often carries a lot of overhead, and will likely not be missed by the user.  Keep in mind that the traditional definition of "cross-browser" is really only pertinent to those QAing the page, because NO ONE else looks at the same site in multiple browsers.  So, as long as your shit doesn't break, you're cross-browser.

That said, if you <em>do</em> need those rounded corners, here are ways to do it.

<h2>The Options</h2>
<ul>
	<li>
<h3><a href="css3-pie">CSS3 PIE</a></h3>
<h4>Pros:</h4>
<ul>
	<li>Comes as a single package, which also adds linear background gradients and drop-shadows to IE (only).</li>
	<li>Is IE-only, so non-IE browsers get no additional weight, and if you add via an IE-only stylesheet, the rest of your stylesheets will validate (if that matters to you).</li>
</ul>
<h4>Cons:</h4>
<ul>
	<li>Comes as a single package, so if you <em>don't</em> need those other features on a page, at 27.6kb, it's a little heavy...</li>
	<li>Because it requires a non-standard <code>behavior</code> for implementation, the stylesheet used to add this will not validate (if that matters to you).</li>
	<li>Implementation requires JS; without JS, nothing happens.</li>
	<li>Not all servers permit HTC files.</li>
</ul>
</li>
</ul>
<h2>The Bottom-Line</h2>
I initially had several methods, but CSS3 PIE was the only one to prove stable in all the situations I tried to use it.  So, if you need rounded corners, I'd say use CSS3 PIE.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>37</wp:post_id>
		<wp:post_date>2010-12-13 20:14:53</wp:post_date>
		<wp:post_date_gmt>2010-12-14 01:14:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>border-radius</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>2</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>box-shadow</title>
		<link>http://aarontgrogg.com/practicalcss3/box-shadow/</link>
		<pubDate>Tue, 14 Dec 2010 01:15:57 +0000</pubDate>
		<dc:creator>test</dc:creator>
		<guid isPermaLink="false">http://localhost/aarontgrogg/practicalcss3/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Right alongside <code>background-gradient</code>, <code>box-shadow</code> (CSS-speak for drop-shadows) gives a page depth.  And, like <code>background-gradient</code>s, images were usually how this was done.  Either very, very large images, or unnecessary <code>div</code>s and annoying sprites...  "Are they necessary?"  Probably.</p>
				<p>So, if you <em>do</em> need drop-shadows, here are ways to do it.</p>
				<h2>The Options</h2>
				<ul><li><h3><a href="internet-explorer-filters">Internet Explorer Filters</a></h3>
						<h4>Pros:</h4>
						<ul><li>Pure, valid CSS, no JS, no HTC, no tricks, no hacks!</li>
							<li>IE8 offers vendor prefix (-ms) and IE6/7 use the proprietary <code>filter</code>, so can easily put that into IE-only stylesheet.</li>
							<li>For better or worse, IE6, 7, and 8 are pretty stable as they are, and so it is pretty easy to know which does, and doesn't, do what.</li>
							<li>Easy to target specific browser versions if using HTML5 Boilerplate <code>&lt;head&gt;</code> conditional comments.</li>
						</ul>
						<h4>Cons:</h4>
						<ul><li>Fairly limited set of <code>filter</code>s, and most look pretty crappy.</li>
							<li><code>filter</code> is invalid, so stylesheets will not validate, if you care about that.</li>
							<li>At least one more line of CSS for each feature...</li>
						</ul>
					</li>
					<li><h3><a href="css3-pie">CSS3 PIE</a></h3>
						<h4>Pros:</h4>
						<ul><li>Eliminates need for IE <code>filter</code>s.</li>
							<li>Comes as a single package, which also adds border-radius and drop-shadows to IE (only).</li>
							<li>Is IE-only, so non-IE browsers get no additional weight, and if you add via an IE-only stylesheet, the rest of your stylesheets will validate (if that matters to you).</li>
						</ul>
						<h4>Cons:</h4>
						<ul><li>Comes as a single package, so if you <em>don't</em> need those other features on a page, at 27.6kb, it's a little heavy...</li>
							<li>Because it requires a non-standard <code>behavior</code> for implementation, the stylesheet used to add this will not validate (if that matters to you).</li>
							<li>Implementation requires JS; without JS, nothing happens.</li>
							<li>Not all servers permit HTC files.</li>
						</ul>
					</li>
				</ul>
				<h2>The Bottom-Line</h2>
				<p>I would say pure CSS (meaning IE filters) is always the way to go, but both IE Filters and CSS3 PIE will break validation, so, your call.</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>39</wp:post_id>
		<wp:post_date>2010-12-13 20:15:57</wp:post_date>
		<wp:post_date_gmt>2010-12-14 01:15:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>box-shadow</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>3</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>opacity</title>
		<link>http://aarontgrogg.com/practicalcss3/opacity/</link>
		<pubDate>Tue, 14 Dec 2010 01:16:26 +0000</pubDate>
		<dc:creator>test</dc:creator>
		<guid isPermaLink="false">http://localhost/aarontgrogg/practicalcss3/</guid>
		<description></description>
		<content:encoded><![CDATA[				<p><code>opacity</code> is well-covered in all modern browsers, and can be achieved in all IEs with a combo of a <code>filter</code> for IE6/7 and <code>-ms-filter</code> for IE8.</p>
				<p>Note that <code>opacity</code> cascades to all elements within the element you're styling.  Meaning, if you set a <code>div</code> to have a 50% opacity, everything inside of that <code>div</code> will <em>also</em> have 50% opacity; and there is no way to give something 150% opacity to force it back...</p>
				<p>If what you're looking to do is create a semi-transparent background, see the section on <a href="http://aarontgrogg.com/practicalcss3/rgba/"><code>rgba</code></a>.</p>
				<h2>The Options</h2>
				<ul><li><h3><a href="internet-explorer-filters">Internet Explorer Filter</a></h3>
						<h4>Pros:</h4>
						<ul><li>Pure, valid CSS, no JS, no HTC, no tricks, no hacks!</li>
							<li>IE8 offers vendor prefix (-ms).</li>
							<li>IE6/7 use the proprietary <code>filter</code>, so can easily put that into IE-only stylesheet.</li>
							<li>Easy to target specific browser versions if using HTML5 Boilerplate <code>&lt;head&gt;</code> conditional comments.</li>
						</ul>
						<h4>Cons:</h4>
						<ul><li><code>filter</code> is invalid, so stylesheets will not validate, if you care about that.</li>
							<li>At least one more line of CSS for each feature...</li>
						</ul>
					</li>
					<li><h3><a href="ecsstender">eCSStender</a></h3>
						<h4>Pros:</h4>
						<ul><li>Eliminates need for IE Filters</li>
							<li>Extensions are modular, so you can (more-or-less) only add the features you need for each page.</li>
							<li><s>This extension also handles <code>rgba</code> and <code>hsla</code>, so if you plan to use those on the same page, this is already there.</s>
								<aside>I found the <code>rgba</code> and <code>hsla</code> portions of the extenstion completely unreliable, so would not recommend using them.</aside>
							</li>
							<li>Open-source, so limited <a href="http://ecsstender.org/extensions">extensions</a> will hopefully grow if this catches on (or you could build your own!).</li>
						</ul>
						<h4>Cons:</h4>
						<ul><li>If added to a site, all browsers get the additional weight (eCSStender Core is 18.8kb, and the extension is 3.86kb, minified).</li>
							<li>Somewhat expensive, as it examines every rule on every stylesheet on the page, comparing each to whatever extensions are available.</li>
							<li>Implementation requires JS; without JS, nothing happens.</li>
							<li>Extensions are still somewhat limited (though they do cover probably the most common CSS3 features).</li>
						</ul>
					</li>
				</ul>
				<h2>The Bottom-Line</h2>
				<p>I would say pure CSS (meaning IE filters) is always the way to go, but IE Filters will break validation.  eCSStender validates, which is great, but also adds more weight to <strong>all</strong> browsers (not <em>just</em> those that need the help).</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>41</wp:post_id>
		<wp:post_date>2010-12-13 20:16:26</wp:post_date>
		<wp:post_date_gmt>2010-12-14 01:16:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>opacity</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>4</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>rgba</title>
		<link>http://aarontgrogg.com/practicalcss3/rgba/</link>
		<pubDate>Tue, 14 Dec 2010 01:16:55 +0000</pubDate>
		<dc:creator>test</dc:creator>
		<guid isPermaLink="false">http://localhost/aarontgrogg/practicalcss3/</guid>
		<description></description>
		<content:encoded><![CDATA[				<p><code>rgba</code> is well-covered in all modern browsers, and can be achieved in all IEs with a combo of a <code>filter</code> for IE6/7 and <code>-ms-filter</code> for IE8.</p>
				<p>The filter approach is a little bit tricky because it uses the Gradient filter, which requires your RGBa colors to be passed as converted as <abbr title="Alpha Red Green Blue">ARGB</abbr> colors, which means <code>rgba(123,123,123,.5)</code> needs to be <code>#7F7B7B7B</code> (yes, there are 8 digits, as in: #AARRGGBB)...  Luckily, <a href="http://kilianvalkhof.com/2010/css-xhtml/how-to-use-rgba-in-ie/">Kilian Valkhof has created an RGBa-to-ARGB converter</a> for you!</p>
				<p>I have also found a solution that uses PHP to create a PNG image that can be repeated as a background-image.  Slick, but more work than I could be bothered testing, so... <a href="http://leaverou.me/2009/02/bulletproof-cross-browser-rgba-backgrounds/">give it a go</a> if you want!</p>
				<h2>The Options</h2>
				<ul><li><h3><a href="internet-explorer-filters">Internet Explorer Filter</a></h3>
						<h4>Pros:</h4>
						<ul><li>Pure, valid CSS, no JS, no HTC, no tricks, no hacks!</li>
							<li>IE8 offers vendor prefix (-ms).</li>
							<li>IE6/7 use non-proprietary <code>filter</code>, so can easily put that into IE-only stylesheet.</li>
							<li>Easy to target specific browser versions if using HTML5 Boilerplate <code>&lt;head&gt;</code> conditional comments.</li>
						</ul>
						<h4>Cons:</h4>
						<ul><li>Having to convert RGBa to ARGB?  That's a pretty big "con" to me, even with the converter...</li>
							<li><code>filter</code> is invalid, so stylesheets will not validate, if you care about that.</li>
							<li>At least one more line of CSS for each feature...</li>
						</ul>
					</li>
				</ul>
				<h2>The Bottom-Line</h2>
				<p>I was completely ready to give this to eCSStender, because the filter has to convert the RGBa, but eCSStender completely destroyed the text inside the box...  So, I guess we're back to filters...  At least there's a converter, right?</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>43</wp:post_id>
		<wp:post_date>2010-12-13 20:16:55</wp:post_date>
		<wp:post_date_gmt>2010-12-14 01:16:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>rgba</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>5</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>11</wp:comment_id>
			<wp:comment_author><![CDATA[Aaron Gustafson]]></wp:comment_author>
			<wp:comment_author_email>aaron@easy-designs.net</wp:comment_author_email>
			<wp:comment_author_url>http://easy-designs.net</wp:comment_author_url>
			<wp:comment_author_IP>74.221.190.5</wp:comment_author_IP>
			<wp:comment_date>2011-01-15 17:58:12</wp:comment_date>
			<wp:comment_date_gmt>2011-01-15 22:58:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm curious how eCSStender destroyed the text. Can you provide an example?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1295132292.9479";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:64:{s:15:"comment_post_ID";s:2:"43";s:14:"comment_author";s:15:"Aaron Gustafson";s:20:"comment_author_email";s:22:"aaron@easy-designs.net";s:18:"comment_author_url";s:23:"http://easy-designs.net";s:15:"comment_content";s:74:"I'm curious how eCSStender destroyed the text. Can you provide an example?";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:12:"74.221.190.5";s:10:"user_agent";s:127:"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_5; en-us) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4";s:8:"referrer";s:42:"http://aarontgrogg.com/practicalcss3/rgba/";s:4:"blog";s:36:"http://aarontgrogg.com/practicalcss3";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:42:"http://aarontgrogg.com/practicalcss3/rgba/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:15:"Aaron Gustafson";s:10:"POST_email";s:22:"aaron@easy-designs.net";s:8:"POST_url";s:23:"http://easy-designs.net";s:12:"POST_comment";s:74:"I'm curious how eCSStender destroyed the text. Can you provide an example?";s:11:"POST_submit";s:12:"Post Comment";s:20:"POST_comment_post_ID";s:2:"43";s:19:"POST_comment_parent";s:1:"0";s:26:"POST_akismet_comment_nonce";s:10:"75b6a61bf2";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:35:"/practicalcss3/wp-comments-post.php";s:14:"CONTENT_LENGTH";s:3:"263";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:13:"DOCUMENT_ROOT";s:39:"/home/content/a/a/r/aarontgroggcom/html";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"HTTP_ACCEPT";s:90:"application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:20:"HTTP_ACCEPT_LANGUAGE";s:5:"en-us";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:11:"HTTP_COOKIE";s:0:"";s:9:"HTTP_HOST";s:15:"aarontgrogg.com";s:11:"HTTP_ORIGIN";s:22:"http://aarontgrogg.com";s:12:"HTTP_REFERER";s:42:"http://aarontgrogg.com/practicalcss3/rgba/";s:15:"HTTP_USER_AGENT";s:127:"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_5; en-us) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4";s:4:"PATH";s:28:"/bin:/usr/bin:/usr/local/bin";s:9:"PATH_INFO";s:21:"/wp-comments-post.php";s:5:"PHPRC";s:39:"/home/content/a/a/r/aarontgroggcom/html";s:12:"QUERY_STRING";s:0:"";s:19:"REDIRECT_SCRIPT_URI";s:57:"http://aarontgrogg.com/practicalcss3/wp-comments-post.php";s:19:"REDIRECT_SCRIPT_URL";s:35:"/practicalcss3/wp-comments-post.php";s:15:"REDIRECT_STATUS";s:3:"200";s:12:"REDIRECT_URL";s:35:"/practicalcss3/wp-comments-post.php";s:11:"REMOTE_ADDR";s:12:"74.221.190.5";s:11:"REMOTE_PORT";s:5:"37311";s:14:"REQUEST_METHOD";s:4:"POST";s:15:"SCRIPT_FILENAME";s:60:"/home/content/a/a/r/aarontgroggcom/html/wp-comments-post.php";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:10:"SCRIPT_URI";s:57:"http://aarontgrogg.com/practicalcss3/wp-comments-post.php";s:10:"SCRIPT_URL";s:35:"/practicalcss3/wp-comments-post.php";s:11:"SERVER_ADDR";s:12:"72.167.232.6";s:12:"SERVER_ADMIN";s:26:"support@supportwebsite.com";s:11:"SERVER_NAME";s:15:"aarontgrogg.com";s:11:"SERVER_PORT";s:2:"80";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:16:"SERVER_SIGNATURE";s:67:"<ADDRESS>Apache/1.3.33 Server at aarontgrogg.com Port 80</ADDRESS>
";s:3:"SPI";s:4:"TRUE";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1295132291";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1295163398.5875";s:7:"message";s:50:"aarontgrogg changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"aarontgrogg";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>17</wp:comment_id>
			<wp:comment_author><![CDATA[aarontgrogg]]></wp:comment_author>
			<wp:comment_author_email>aarontgrogg@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://aarontgrogg.com/</wp:comment_author_url>
			<wp:comment_author_IP>74.108.234.76</wp:comment_author_IP>
			<wp:comment_date>2011-01-17 16:27:14</wp:comment_date>
			<wp:comment_date_gmt>2011-01-17 21:27:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey, Aaron, thanks for checking on this.

When I was initially doing all this, I was having a problem in all browsers where the text within the area eCSStender should be styling was being garbled, making it unreadable.  I checked across multiple browsers on multiple computers.

I don't seem to be having that problem any more (<a href="http://aarontgrogg.com/practicalcss3/rgba/ecsstender/" rel="nofollow">http://aarontgrogg.com/practicalcss3/rgba/ecsstender/</a>), but I am also not seeing the RGBA in IE...

Any thoughts?

Thanks again.
Atg]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>11</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1295299635.0333";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"aarontgrogg";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:63:{s:15:"comment_post_ID";s:2:"43";s:14:"comment_author";s:11:"aarontgrogg";s:20:"comment_author_email";s:21:"aarontgrogg@yahoo.com";s:18:"comment_author_url";s:23:"http://aarontgrogg.com/";s:15:"comment_content";s:542:"Hey, Aaron, thanks for checking on this.

When I was initially doing all this, I was having a problem in all browsers where the text within area eCSStender should have been affecting was being garbled, making it unreadable.  I checked across multiple browsers on multiple computers.

I don't seem to be having that problem any more (<a href="http://aarontgrogg.com/practicalcss3/rgba/ecsstender/">http://aarontgrogg.com/practicalcss3/rgba/ecsstender/</a>), but I am also not seeing the RGBA in IE...

Any thoughts?

Thanks again.
Atg";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:2:"11";s:7:"user_ID";s:1:"1";s:7:"user_ip";s:13:"74.108.234.76";s:10:"user_agent";s:97:"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.6; en-US; rv:1.9.2.13) Gecko/20101203 Firefox/3.6.13";s:8:"referrer";s:42:"http://aarontgrogg.com/practicalcss3/rgba/";s:4:"blog";s:36:"http://aarontgrogg.com/practicalcss3";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:42:"http://aarontgrogg.com/practicalcss3/rgba/";s:9:"user_role";s:11:"super_admin";s:21:"akismet_comment_nonce";s:6:"passed";s:12:"POST_comment";s:542:"Hey, Aaron, thanks for checking on this.

When I was initially doing all this, I was having a problem in all browsers where the text within area eCSStender should have been affecting was being garbled, making it unreadable.  I checked across multiple browsers on multiple computers.

I don't seem to be having that problem any more (<a href="http://aarontgrogg.com/practicalcss3/rgba/ecsstender/">http://aarontgrogg.com/practicalcss3/rgba/ecsstender/</a>), but I am also not seeing the RGBA in IE...

Any thoughts?

Thanks again.
Atg";s:11:"POST_submit";s:12:"Post Comment";s:20:"POST_comment_post_ID";s:2:"43";s:19:"POST_comment_parent";s:2:"11";s:32:"POST__wp_unfiltered_html_comment";s:10:"e952056473";s:26:"POST_akismet_comment_nonce";s:10:"c4cdaf823f";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:35:"/practicalcss3/wp-comments-post.php";s:14:"CONTENT_LENGTH";s:3:"777";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:13:"DOCUMENT_ROOT";s:39:"/home/content/a/a/r/aarontgroggcom/html";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.7";s:20:"HTTP_ACCEPT_ENCODING";s:12:"gzip,deflate";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-us,en;q=0.5";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:11:"HTTP_COOKIE";s:0:"";s:9:"HTTP_HOST";s:15:"aarontgrogg.com";s:15:"HTTP_KEEP_ALIVE";s:3:"115";s:12:"HTTP_REFERER";s:42:"http://aarontgrogg.com/practicalcss3/rgba/";s:15:"HTTP_USER_AGENT";s:97:"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.6; en-US; rv:1.9.2.13) Gecko/20101203 Firefox/3.6.13";s:4:"PATH";s:28:"/bin:/usr/bin:/usr/local/bin";s:9:"PATH_INFO";s:21:"/wp-comments-post.php";s:5:"PHPRC";s:39:"/home/content/a/a/r/aarontgroggcom/html";s:12:"QUERY_STRING";s:0:"";s:19:"REDIRECT_SCRIPT_URI";s:57:"http://aarontgrogg.com/practicalcss3/wp-comments-post.php";s:19:"REDIRECT_SCRIPT_URL";s:35:"/practicalcss3/wp-comments-post.php";s:15:"REDIRECT_STATUS";s:3:"200";s:12:"REDIRECT_URL";s:35:"/practicalcss3/wp-comments-post.php";s:11:"REMOTE_ADDR";s:13:"74.108.234.76";s:11:"REMOTE_PORT";s:5:"50603";s:14:"REQUEST_METHOD";s:4:"POST";s:15:"SCRIPT_FILENAME";s:60:"/home/content/a/a/r/aarontgroggcom/html/wp-comments-post.php";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:10:"SCRIPT_URI";s:57:"http://aarontgrogg.com/practicalcss3/wp-comments-post.php";s:10:"SCRIPT_URL";s:35:"/practicalcss3/wp-comments-post.php";s:11:"SERVER_ADDR";s:12:"72.167.232.6";s:12:"SERVER_ADMIN";s:26:"support@supportwebsite.com";s:11:"SERVER_NAME";s:15:"aarontgrogg.com";s:11:"SERVER_PORT";s:2:"80";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:16:"SERVER_SIGNATURE";s:67:"<ADDRESS>Apache/1.3.33 Server at aarontgrogg.com Port 80</ADDRESS>
";s:3:"SPI";s:4:"TRUE";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1295299633";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>rotate text</title>
		<link>http://aarontgrogg.com/practicalcss3/rotate-text/</link>
		<pubDate>Tue, 14 Dec 2010 01:17:30 +0000</pubDate>
		<dc:creator>test</dc:creator>
		<guid isPermaLink="false">http://localhost/aarontgrogg/practicalcss3/</guid>
		<description></description>
		<content:encoded><![CDATA[				<p>I first stumbled across <a href="http://snook.ca/archives/html_and_css/css-text-rotation">Jonathan Snook's post on rotating text</a>, but then I found this <a href="http://www.thecssninja.com/css/real-text-rotation-with-css">CSS Ninja post that adds a nice bit to Snook's implementation</a> (be sure to read all the way through to see all the variations and options).</p>
				<h2>The Options</h2>
				<ul><li><h3><a href="internet-explorer-filters">Internet Explorer Filters</a></h3>
						<h4>Pros:</h4>
						<ul><li>Pure, valid CSS, no JS, no HTC, no tricks, no hacks!</li>
							<li>IE8 offers vendor prefix (-ms).</li>
							<li>IE6/7 use non-proprietary <code>filter</code>, so can easily put that into IE-only stylesheet.</li>
							<li>For better or worse, IE6, 7, and 8 are pretty stable as they are, and so it is pretty easy to know which does, and doesn't, do what.</li>
							<li>Easy to target specific browser versions if using HTML5 Boilerplate <code>&lt;head&gt;</code> conditional comments.</li>
						</ul>
						<h4>Cons:</h4>
						<ul><li>Fairly limited set of <code>filter</code>s, and most look pretty crappy.</li>
							<li><code>filter</code> is invalid, so stylesheets will not validate, if you care about that.</li>
							<li>At least one more line of CSS for each feature...</li>
						</ul>
					</li>
				</ul>
				<h2>The Bottom-Line</h2>
				<p>As much of a pain as it was to have to manually determine all the layout, with IE Filters going uncontested in this bout, it is a fairly easy decision...</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>45</wp:post_id>
		<wp:post_date>2010-12-13 20:17:30</wp:post_date>
		<wp:post_date_gmt>2010-12-14 01:17:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>rotate-text</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>6</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>text-shadow</title>
		<link>http://aarontgrogg.com/practicalcss3/text-shadow/</link>
		<pubDate>Tue, 14 Dec 2010 01:17:57 +0000</pubDate>
		<dc:creator>test</dc:creator>
		<guid isPermaLink="false">http://localhost/aarontgrogg/practicalcss3/</guid>
		<description></description>
		<content:encoded><![CDATA[				<p>It's funny, for the longest time I thought IE supported <code>text-shadow</code> natively... huh.</p>
				<p>Fortunately, IE Filters are here "to save us" once again.</p>
				<p>While none of the filters look particularly good, there are a couple that can be used to create a couple different looks.</p>
				<h2>The Options</h2>
				<ul><li><h3><a href="internet-explorer-filters">Internet Explorer Filters</a></h3>
						<h4>Pros:</h4>
						<ul><li>Pure, valid CSS, no JS, no HTC, no tricks, no hacks!</li>
							<li>IE8 offers vendor prefix (-ms).</li>
							<li>IE6/7 use non-proprietary <code>filter</code>, so can easily put that into IE-only stylesheet.</li>
							<li>For better or worse, IE6, 7, and 8 are pretty stable as they are, and so it is pretty easy to know which does, and doesn't, do what.</li>
							<li>Easy to target specific browser versions if using HTML5 Boilerplate <code>&lt;head&gt;</code> conditional comments.</li>
						</ul>
						<h4>Cons:</h4>
						<ul><li>Fairly limited set of <code>filter</code>s, and most look pretty crappy.</li>
							<li><code>filter</code> is invalid, so stylesheets will not validate, if you care about that.</li>
							<li>At least one more line of CSS for each feature...</li>
						</ul>
					</li>
				</ul>
				<h2>The Bottom-Line</h2>
				<p>Use filters, or nothing at all.</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>47</wp:post_id>
		<wp:post_date>2010-12-13 20:17:57</wp:post_date>
		<wp:post_date_gmt>2010-12-14 01:17:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>text-shadow</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>7</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Internet Explorer Filters</title>
		<link>http://aarontgrogg.com/practicalcss3/background-gradient/internet-explorer-filters/</link>
		<pubDate>Tue, 14 Dec 2010 02:00:55 +0000</pubDate>
		<dc:creator>test</dc:creator>
		<guid isPermaLink="false">http://localhost/aarontgrogg/practicalcss3/</guid>
		<description></description>
		<content:encoded><![CDATA[<style>
div.entry-content div { margin: .75em 0; padding: 10px; border: 3px solid #444; background: #fff;}
#example1 {
	background: #d1c26c; /* Old browsers */
	background-image: -moz-linear-gradient(top, #d1c26c 0%, #e5e2b9 22%, #d1cd96 66%, #b5a75c 100%); /* FF3.6+ */
	background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#d1c26c), color-stop(22%,#e5e2b9), color-stop(66%,#d1cd96), color-stop(100%,#b5a75c)); /* Chrome,Safari4+ */
	background-image: -webkit-linear-gradient(top, #d1c26c 0%,#e5e2b9 22%,#d1cd96 66%,#b5a75c 100%); /* Chrome10+,Safari5.1+ */
	background-image: -o-linear-gradient(top, #d1c26c 0%,#e5e2b9 22%,#d1cd96 66%,#b5a75c 100%); /* Opera11.10+ */
	background-image: -ms-linear-gradient(top, #d1c26c 0%,#e5e2b9 22%,#d1cd96 66%,#b5a75c 100%); /* IE10+ */
	background-image: linear-gradient(top, #d1c26c 0%,#e5e2b9 22%,#d1cd96 66%,#b5a75c 100%); /* W3C */
}
html.lte9 #example1 {
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#D1C26C', endColorstr='#B5A75C',GradientType=0 ); /* IE6-9 */
	zoom: 1; /* 'hasLayout' required for HTC method */
}
</style>
				<p><a href="http://msdn.microsoft.com/en-us/library/ms532997%28v=VS.85%29.aspx">Internet Explorer Filters</a> are a pure CSS implementation that, when used in conjunction with the HTML5 Boilerplate <code>&lt;html&gt;</code> conditional comments, requires no hacks and validates (almost) perfectly!</p>
				<p>Note that gradients display a color <em>between</em> an element's background its and content (meaning an element's background color will shine through the gradient).</p>
				<p>Also note that this CSS will not validate because <code>filter</code> is invalid.  If validation is important to you, this could be served via an IE-only stylesheet.</p>
				<p>Lastly, note that Firefox 3.5- and, as of this writing, Opera, do not support background gradients, so if you are concerned with either of these browser versions, you might want to also include a background gradient image.  By referencing the <code>no-cssgradients</code> class, and placing it before the <code>.ie</code> class, you prevent the image from being downloaded by browsers that <em>do</em> support background gradients), even though it doesn't really need it, IE <em>would</em> get the download...I never said this would all be perfect...</p>
				<p>Okay, <em>really</em> the last note, here is <a href="http://chetzit.com/blog/css/19.html">another alternative for Opera</a>, again, if you're really interested.</p>
<pre>
#example1 {
	background: #d1c26c; /* Old browsers */
	background-image: -moz-linear-gradient(top, #d1c26c 0%, #e5e2b9 22%, #d1cd96 66%, #b5a75c 100%); /* FF3.6+ */
	background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#d1c26c), color-stop(22%,#e5e2b9), color-stop(66%,#d1cd96), color-stop(100%,#b5a75c)); /* Chrome,Safari4+ */
	background-image: -webkit-linear-gradient(top, #d1c26c 0%,#e5e2b9 22%,#d1cd96 66%,#b5a75c 100%); /* Chrome10+,Safari5.1+ */
	background-image: -o-linear-gradient(top, #d1c26c 0%,#e5e2b9 22%,#d1cd96 66%,#b5a75c 100%); /* Opera11.10+ */
	background-image: -ms-linear-gradient(top, #d1c26c 0%,#e5e2b9 22%,#d1cd96 66%,#b5a75c 100%); /* IE10+ */
	background-image: linear-gradient(top, #d1c26c 0%,#e5e2b9 22%,#d1cd96 66%,#b5a75c 100%); /* W3C */
}
html.lte9 #example1 {
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#D1C26C', endColorstr='#B5A75C',GradientType=0 ); /* IE6-9 */
	zoom: 1; /* 'hasLayout' required for HTC method */
}
</pre>

				<div id="example1">
					<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
				</div>
<aside>Note that <code>filter</code>s <strong>cannot</strong> do color-stops, they can <strong>only</strong> go from one color to another.  If you need multiple color-stops, consider the <a href="http://aarontgrogg.com/practicalcss3/background-gradient/css3-pie">CSS3 Pie</a> option.</aside>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>63</wp:post_id>
		<wp:post_date>2010-12-13 21:00:55</wp:post_date>
		<wp:post_date_gmt>2010-12-14 02:00:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>internet-explorer-filters</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>29</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>30</wp:comment_id>
			<wp:comment_author><![CDATA[aarontgrogg]]></wp:comment_author>
			<wp:comment_author_email>aarontgrogg@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://aarontgrogg.com/</wp:comment_author_url>
			<wp:comment_author_IP>209.251.200.243</wp:comment_author_IP>
			<wp:comment_date>2011-05-12 12:21:18</wp:comment_date>
			<wp:comment_date_gmt>2011-05-12 16:21:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Updated:
<ul><li>Examples now include new WebKit gradient (<code>-webkit-linear-gradient(...)</code>), but still have the old (<code>-webkit-gradient(linear...)</code>) for older WebKit browsers.</li>
<li>Added Opera and Microsoft vendor prefixes, changing the CSS selector from <code>html.ie</code> to <code>html.lte9</code> to prevent the <code>filter</code> from affecting IE10+.</li>
<li>Dumped <code>-ms-filter</code>, cause, do we really need <em>another</em> line of CSS here?  Especially since the plain old <code>filter</code> still works just fine...</li>
<li>Re-ordered the declarations to list the W3C-version last, so as browser implement the standard, it will be the one that affects page elements.</li>
</ul>
Cheers,
Atg]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1305217278.7464";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"aarontgrogg";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:63:{s:15:"comment_post_ID";s:2:"63";s:14:"comment_author";s:11:"aarontgrogg";s:20:"comment_author_email";s:21:"aarontgrogg@yahoo.com";s:18:"comment_author_url";s:23:"http://aarontgrogg.com/";s:15:"comment_content";s:562:"Updated:
<ul><li>Examples now include new WebKit gradient (<code>-webkit-linear-gradient(...)</code>), but still have the old (<code>-webkit-gradient(linear...)</code>) for older WebKit browsers.</li>
<li>Added Opera and Microsoft vendor prefixes, changing the CSS selector from <code>html.ie</code> to <code>html.lte9</code> to prevent the <code>filter</code> from affecting IE10.</li>
<li>Re-ordered the declarations to list the W3C-version last, so as browser implement the standard, it will be the one that affects page elements.</li>
</ul>
Cheers,
Atg";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"1";s:7:"user_ip";s:15:"209.251.200.243";s:10:"user_agent";s:111:"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2.17) Gecko/20110420 Firefox/3.6.17 (.NET CLR 3.5.30729)";s:8:"referrer";s:82:"http://aarontgrogg.com/practicalcss3/background-gradient/internet-explorer-filters";s:4:"blog";s:36:"http://aarontgrogg.com/practicalcss3";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:83:"http://aarontgrogg.com/practicalcss3/background-gradient/internet-explorer-filters/";s:9:"user_role";s:25:"administrator,super_admin";s:21:"akismet_comment_nonce";s:6:"passed";s:12:"POST_comment";s:562:"Updated:
<ul><li>Examples now include new WebKit gradient (<code>-webkit-linear-gradient(...)</code>), but still have the old (<code>-webkit-gradient(linear...)</code>) for older WebKit browsers.</li>
<li>Added Opera and Microsoft vendor prefixes, changing the CSS selector from <code>html.ie</code> to <code>html.lte9</code> to prevent the <code>filter</code> from affecting IE10.</li>
<li>Re-ordered the declarations to list the W3C-version last, so as browser implement the standard, it will be the one that affects page elements.</li>
</ul>
Cheers,
Atg";s:11:"POST_submit";s:12:"Post Comment";s:20:"POST_comment_post_ID";s:2:"63";s:19:"POST_comment_parent";s:1:"0";s:32:"POST__wp_unfiltered_html_comment";s:10:"0326a5517d";s:26:"POST_akismet_comment_nonce";s:10:"b9ad9b35f2";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:35:"/practicalcss3/wp-comments-post.php";s:14:"CONTENT_LENGTH";s:3:"840";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:13:"DOCUMENT_ROOT";s:39:"/home/content/a/a/r/aarontgroggcom/html";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.7";s:20:"HTTP_ACCEPT_ENCODING";s:12:"gzip,deflate";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-us,en;q=0.5";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:11:"HTTP_COOKIE";s:0:"";s:9:"HTTP_HOST";s:15:"aarontgrogg.com";s:15:"HTTP_KEEP_ALIVE";s:3:"115";s:12:"HTTP_REFERER";s:82:"http://aarontgrogg.com/practicalcss3/background-gradient/internet-explorer-filters";s:15:"HTTP_USER_AGENT";s:111:"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2.17) Gecko/20110420 Firefox/3.6.17 (.NET CLR 3.5.30729)";s:4:"PATH";s:28:"/bin:/usr/bin:/usr/local/bin";s:9:"PATH_INFO";s:21:"/wp-comments-post.php";s:5:"PHPRC";s:39:"/home/content/a/a/r/aarontgroggcom/html";s:12:"QUERY_STRING";s:0:"";s:19:"REDIRECT_SCRIPT_URI";s:57:"http://aarontgrogg.com/practicalcss3/wp-comments-post.php";s:19:"REDIRECT_SCRIPT_URL";s:35:"/practicalcss3/wp-comments-post.php";s:15:"REDIRECT_STATUS";s:3:"200";s:12:"REDIRECT_URL";s:35:"/practicalcss3/wp-comments-post.php";s:11:"REMOTE_ADDR";s:15:"209.251.200.243";s:11:"REMOTE_PORT";s:5:"32755";s:14:"REQUEST_METHOD";s:4:"POST";s:15:"SCRIPT_FILENAME";s:60:"/home/content/a/a/r/aarontgroggcom/html/wp-comments-post.php";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:10:"SCRIPT_URI";s:57:"http://aarontgrogg.com/practicalcss3/wp-comments-post.php";s:10:"SCRIPT_URL";s:35:"/practicalcss3/wp-comments-post.php";s:11:"SERVER_ADDR";s:12:"72.167.232.6";s:12:"SERVER_ADMIN";s:26:"support@supportwebsite.com";s:11:"SERVER_NAME";s:15:"aarontgrogg.com";s:11:"SERVER_PORT";s:2:"80";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:16:"SERVER_SIGNATURE";s:67:"<ADDRESS>Apache/1.3.33 Server at aarontgrogg.com Port 80</ADDRESS>
";s:3:"SPI";s:4:"TRUE";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1305217277";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>CSS3 PIE</title>
		<link>http://aarontgrogg.com/practicalcss3/background-gradient/css3-pie/</link>
		<pubDate>Tue, 14 Dec 2010 02:22:40 +0000</pubDate>
		<dc:creator>test</dc:creator>
		<guid isPermaLink="false">http://localhost/aarontgrogg/practicalcss3/</guid>
		<description></description>
		<content:encoded><![CDATA[<style>
div.entry-content div { margin: .75em 0; padding: 10px; border: 3px solid #444; background: #fff;}
#example1 {
	background: #d1c26c; /* Old browsers */
	background-image: -moz-linear-gradient(top, #d1c26c 0%, #e5e2b9 22%, #d1cd96 66%, #b5a75c 100%); /* FF3.6+ */
	background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#d1c26c), color-stop(22%,#e5e2b9), color-stop(66%,#d1cd96), color-stop(100%,#b5a75c)); /* Chrome,Safari4+ */
	background-image: -webkit-linear-gradient(top, #d1c26c 0%,#e5e2b9 22%,#d1cd96 66%,#b5a75c 100%); /* Chrome10+,Safari5.1+ */
	background-image: -o-linear-gradient(top, #d1c26c 0%,#e5e2b9 22%,#d1cd96 66%,#b5a75c 100%); /* Opera11.10+ */
	background-image: -ms-linear-gradient(top, #d1c26c 0%,#e5e2b9 22%,#d1cd96 66%,#b5a75c 100%); /* IE10+ */
	background-image: linear-gradient(top, #d1c26c 0%,#e5e2b9 22%,#d1cd96 66%,#b5a75c 100%); /* W3C */
}
html.lte9 #example1 {
	-pie-background: linear-gradient(top, #d1c26c 0%,#e5e2b9 22%,#d1cd96 66%,#b5a75c 100%); /* CSS3 PIE */
	behavior: url('../../wp-content/themes/practicalcss3/css3-pie.htc'); /* IE6-9 */
	zoom: 1; /* 'hasLayout' required for HTC method */
}
</style>
				<p><a href="http://css3pie.com/">CSS3 <abbr title="Progressive Internet Explorer">PIE</abbr></a> is an <abbr title="HTML Component">HTC</abbr> file that allows you to use standard CSS3 (plus vendor prefixes) to get features such as linear background gradients, rounded corners and drop-shadows in all browsers.  HTC files are applied using a <code>behavior</code> in your CSS, which is IE-only, and does <strong>not</strong> validate.</p>

<pre>
#example1 {
	background: #d1c26c; /* Old browsers */
	background-image: -moz-linear-gradient(top, #d1c26c 0%, #e5e2b9 22%, #d1cd96 66%, #b5a75c 100%); /* FF3.6+ */
	background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#d1c26c), color-stop(22%,#e5e2b9), color-stop(66%,#d1cd96), color-stop(100%,#b5a75c)); /* Chrome,Safari4+ */
	background-image: -webkit-linear-gradient(top, #d1c26c 0%,#e5e2b9 22%,#d1cd96 66%,#b5a75c 100%); /* Chrome10+,Safari5.1+ */
	background-image: -o-linear-gradient(top, #d1c26c 0%,#e5e2b9 22%,#d1cd96 66%,#b5a75c 100%); /* Opera11.10+ */
	background-image: -ms-linear-gradient(top, #d1c26c 0%,#e5e2b9 22%,#d1cd96 66%,#b5a75c 100%); /* IE10+ */
	background-image: linear-gradient(top, #d1c26c 0%,#e5e2b9 22%,#d1cd96 66%,#b5a75c 100%); /* W3C */
}
html.lte9 #example1 {
	-pie-background: linear-gradient(top, #d1c26c 0%,#e5e2b9 22%,#d1cd96 66%,#b5a75c 100%); /* CSS3 PIE */
	behavior: url('../../wp-content/themes/practicalcss3/css3-pie.htc'); /* IE6-9 */
	zoom: 1; /* 'hasLayout' required for HTC method */
}
</pre>
				<div id="example1">
					<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
				</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>68</wp:post_id>
		<wp:post_date>2010-12-13 21:22:40</wp:post_date>
		<wp:post_date_gmt>2010-12-14 02:22:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>css3-pie</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>29</wp:post_parent>
		<wp:menu_order>2</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>28</wp:comment_id>
			<wp:comment_author><![CDATA[aarontgrogg]]></wp:comment_author>
			<wp:comment_author_email>aarontgrogg@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://aarontgrogg.com/</wp:comment_author_url>
			<wp:comment_author_IP>209.251.200.243</wp:comment_author_IP>
			<wp:comment_date>2011-05-12 11:12:32</wp:comment_date>
			<wp:comment_date_gmt>2011-05-12 15:12:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Updated:
<ul><li>Examples now include new WebKit gradient (<code>-webkit-linear-gradient(...)</code>), but still have the old (<code>-webkit-gradient(linear...)</code>) for older WebKit browsers.</li>
<li>Added Opera and Microsoft vendor prefixes, changing the CSS selector from <code>html.ie</code> to <code>html.lte9</code> to prevent CSS3 Pie from affecting IE10.</li>
<li>Re-ordered the declarations to list the W3C-version last, so as browser implement the standard, it will be the one that affects page elements.</li>
</ul>
Cheers,
Atg]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1305213152.5427";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"aarontgrogg";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:63:{s:15:"comment_post_ID";s:2:"68";s:14:"comment_author";s:11:"aarontgrogg";s:20:"comment_author_email";s:21:"aarontgrogg@yahoo.com";s:18:"comment_author_url";s:23:"http://aarontgrogg.com/";s:15:"comment_content";s:547:"Updated:
<ul><li>Examples now include new WebKit gradient (<code>-webkit-linear-gradient(...)</code>), but still have the old (<code>-webkit-gradient(linear...)</code>) for older WebKit browsers.</li>
<li>Added Opera and Microsoft vendor prefixes, changing the CSS selector from <code>html.ie</code> to <code>html.lte9</code> to prevent CSS3 Pie from affecting IE10.</li>
<li>Re-ordered the declarations to list the W3C-version last, so as browser implement the standard, it will be the one that affects page elements.</li>
</ul>
Cheers,
Atg";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"1";s:7:"user_ip";s:15:"209.251.200.243";s:10:"user_agent";s:111:"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2.17) Gecko/20110420 Firefox/3.6.17 (.NET CLR 3.5.30729)";s:8:"referrer";s:66:"http://aarontgrogg.com/practicalcss3/background-gradient/css3-pie/";s:4:"blog";s:36:"http://aarontgrogg.com/practicalcss3";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:66:"http://aarontgrogg.com/practicalcss3/background-gradient/css3-pie/";s:9:"user_role";s:25:"administrator,super_admin";s:21:"akismet_comment_nonce";s:6:"passed";s:12:"POST_comment";s:549:"Updated:
<ul><li>Examples now include new WebKit gradient (<code>-webkit-linear-gradient(...)</code>), but still have the old (<code>-webkit-gradient(linear...)</code>) for older WebKit browsers.</li>
<li>Added Opera and Microsoft vendor prefixes, changing the CSS selector from <code>html.ie</code> to <code>html.lte9</code> to prevent CSS3 Pie from affecting IE10.</li>
<li>Re-ordered the declarations to list the W3C-version last, so as browser implement the standard, it will be the one that affects page elements.</li>
</ul>
Cheers,
Atg
";s:11:"POST_submit";s:12:"Post Comment";s:20:"POST_comment_post_ID";s:2:"68";s:19:"POST_comment_parent";s:1:"0";s:32:"POST__wp_unfiltered_html_comment";s:10:"1200572b51";s:26:"POST_akismet_comment_nonce";s:10:"cfa7df8ffe";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:35:"/practicalcss3/wp-comments-post.php";s:14:"CONTENT_LENGTH";s:3:"821";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:13:"DOCUMENT_ROOT";s:39:"/home/content/a/a/r/aarontgroggcom/html";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.7";s:20:"HTTP_ACCEPT_ENCODING";s:12:"gzip,deflate";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-us,en;q=0.5";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:11:"HTTP_COOKIE";s:0:"";s:9:"HTTP_HOST";s:15:"aarontgrogg.com";s:15:"HTTP_KEEP_ALIVE";s:3:"115";s:12:"HTTP_REFERER";s:66:"http://aarontgrogg.com/practicalcss3/background-gradient/css3-pie/";s:15:"HTTP_USER_AGENT";s:111:"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2.17) Gecko/20110420 Firefox/3.6.17 (.NET CLR 3.5.30729)";s:4:"PATH";s:28:"/bin:/usr/bin:/usr/local/bin";s:9:"PATH_INFO";s:21:"/wp-comments-post.php";s:5:"PHPRC";s:39:"/home/content/a/a/r/aarontgroggcom/html";s:12:"QUERY_STRING";s:0:"";s:19:"REDIRECT_SCRIPT_URI";s:57:"http://aarontgrogg.com/practicalcss3/wp-comments-post.php";s:19:"REDIRECT_SCRIPT_URL";s:35:"/practicalcss3/wp-comments-post.php";s:15:"REDIRECT_STATUS";s:3:"200";s:12:"REDIRECT_URL";s:35:"/practicalcss3/wp-comments-post.php";s:11:"REMOTE_ADDR";s:15:"209.251.200.243";s:11:"REMOTE_PORT";s:5:"55130";s:14:"REQUEST_METHOD";s:4:"POST";s:15:"SCRIPT_FILENAME";s:60:"/home/content/a/a/r/aarontgroggcom/html/wp-comments-post.php";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:10:"SCRIPT_URI";s:57:"http://aarontgrogg.com/practicalcss3/wp-comments-post.php";s:10:"SCRIPT_URL";s:35:"/practicalcss3/wp-comments-post.php";s:11:"SERVER_ADDR";s:12:"72.167.232.6";s:12:"SERVER_ADMIN";s:26:"support@supportwebsite.com";s:11:"SERVER_NAME";s:15:"aarontgrogg.com";s:11:"SERVER_PORT";s:2:"80";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:16:"SERVER_SIGNATURE";s:67:"<ADDRESS>Apache/1.3.33 Server at aarontgrogg.com Port 80</ADDRESS>
";s:3:"SPI";s:4:"TRUE";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1305213151";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>CSS3 PIE</title>
		<link>http://aarontgrogg.com/practicalcss3/border-radius/css3-pie/</link>
		<pubDate>Tue, 14 Dec 2010 02:29:24 +0000</pubDate>
		<dc:creator>test</dc:creator>
		<guid isPermaLink="false">http://localhost/aarontgrogg/practicalcss3/</guid>
		<description></description>
		<content:encoded><![CDATA[<style>
div.entry-content div { margin: .75em 0; padding: 10px; border: 3px solid #444; background: #fff;}
#example1 {
	-moz-border-radius: 15px; /* Firefox */
	-webkit-border-radius: 15px; /* Safari, Chrome */
	border-radius: 15px; /* Opera, IE9+, W3C */
	/* fix bg bleed: http://tumble.sneak.co.nz/post/928998513/fixing-the-background-bleed */
	-moz-background-clip: padding;
	-webkit-background-clip: padding-box;
	background-clip: padding-box;
}
html.lte8 #example1 {
	behavior: url('../../wp-content/themes/practicalcss3/css3-pie.htc'); /* IE6-8 */
	zoom: 1; /* 'hasLayout' required for HTC method */
}
#example2 a {
	background: #e07;
	border: 2px solid #000;
	color: #000;
	display: inline;
	padding: 2px 8px;
	-moz-border-radius: 15px; /* Firefox */
	-webkit-border-radius: 15px; /* Safari, Chrome */
	border-radius: 15px; /* Opera, IE9+, W3C */
	/* fix bg bleed: http://tumble.sneak.co.nz/post/928998513/fixing-the-background-bleed */
	-moz-background-clip: padding;
	-webkit-background-clip: padding-box;
	background-clip: padding-box;
}
#example2 a:hover {
	color: #fff;
}
html.lte8 #example2 a {
	behavior: url('../../wp-content/themes/practicalcss3/css3-pie.htc'); /* IE6-8 */
	zoom: 1; /* 'hasLayout' required for HTC method */
}
#example3 a {
	background: #e07;
	border: 2px solid #000;
	color: #000;
	display: block;
	width: 58px;
	line-height: 58px;
	text-align: center;
	vertical-align: middle;
	-moz-border-radius: 30px; /* Firefox */
	-webkit-border-radius: 30px; /* Safari, Chrome */
	border-radius: 30px; /* Opera, IE9+, W3C */
	/* fix bg bleed: http://tumble.sneak.co.nz/post/928998513/fixing-the-background-bleed */
	-moz-background-clip: padding;
	-webkit-background-clip: padding-box;
	background-clip: padding-box;
}
#example3 a:hover {
	color: #fff;
}
html.lte8 #example3 a {
	behavior: url('../../wp-content/themes/dark_and_stormy/css3-pie.htc'); /* IE6-8 */
	zoom: 1; /* 'hasLayout' required for HTC method */
}
</style>
		<p><a href="http://css3pie.com/">CSS3 <abbr title="Progressive Internet Explorer">PIE</abbr></a> is an <abbr title="HTML Component">HTC</abbr> file that allows you to use standard CSS3 (plus vendor prefixes) to get features such as linear background gradients, rounded corners and drop-shadows in all browsers.  HTC files are applied using a <code>behavior</code> in your CSS, which is IE-only, and does <strong>not</strong> validate.</p>

<pre>
#example1 {
	-moz-border-radius: 15px; /* Firefox */
	-webkit-border-radius: 15px; /* Safari, Chrome */
	border-radius: 15px; /* Opera, IE9+, W3C */
	/* fix bg bleed: http://tumble.sneak.co.nz/post/928998513/fixing-the-background-bleed */
	-moz-background-clip: padding;
	-webkit-background-clip: padding-box;
	background-clip: padding-box;
}
html.lte8 #example1 {
	behavior: url('../../wp-content/themes/practicalcss3/css3-pie.htc'); /* IE6-8 */
	zoom: 1; /* 'hasLayout' required for HTC method */
}
</pre>
				<div id="example1">
				<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
				</div>

				<p>We can create a cool looking button:</p>
<pre>
#example2 a {
	background: #e07;
	border: 2px solid #000;
	color: #000;
	display: inline;
	padding: 2px 8px;
	-moz-border-radius: 15px; /* Firefox */
	-webkit-border-radius: 15px; /* Safari, Chrome */
	border-radius: 15px; /* Opera, IE9+, W3C */
	/* fix bg bleed: http://tumble.sneak.co.nz/post/928998513/fixing-the-background-bleed */
	-moz-background-clip: padding;
	-webkit-background-clip: padding-box;
	background-clip: padding-box;
}
#example2 a:hover {
	color: #fff;
}
html.lte8 #example2 a {
	behavior: url('../../wp-content/themes/practicalcss3/css3-pie.htc'); /* IE6-8 */
	zoom: 1; /* 'hasLayout' required for HTC method */
}
</pre>
				<div id="example2">
					<a href="#">Vote Now!</a>
				</div>

				<p>Or even a sticker:</p>
<pre>
#example3 a {
	background: #e07;
	border: 2px solid #000;
	color: #000;
	display: block;
	width: 58px;
	line-height: 58px;
	text-align: center;
	vertical-align: middle;
	-moz-border-radius: 30px; /* Firefox */
	-webkit-border-radius: 30px; /* Safari, Chrome */
	border-radius: 30px; /* Opera, IE9+, W3C */
	/* fix bg bleed: http://tumble.sneak.co.nz/post/928998513/fixing-the-background-bleed */
	-moz-background-clip: padding;
	-webkit-background-clip: padding-box;
	background-clip: padding-box;
}
#example3 a:hover {
	color: #fff;
}
html.lte8 #example3 a {
	behavior: url('../../wp-content/themes/dark_and_stormy/css3-pie.htc'); /* IE6-8 */
	zoom: 1; /* 'hasLayout' required for HTC method */
}
</pre>
				<div id="example3">
					<a href="#">Wow!</a>
				</div>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>70</wp:post_id>
		<wp:post_date>2010-12-13 21:29:24</wp:post_date>
		<wp:post_date_gmt>2010-12-14 02:29:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>css3-pie</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>37</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>31</wp:comment_id>
			<wp:comment_author><![CDATA[aarontgrogg]]></wp:comment_author>
			<wp:comment_author_email>aarontgrogg@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://aarontgrogg.com/</wp:comment_author_url>
			<wp:comment_author_IP>209.251.200.243</wp:comment_author_IP>
			<wp:comment_date>2011-05-12 14:16:35</wp:comment_date>
			<wp:comment_date_gmt>2011-05-12 18:16:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Updated:
<ul><li>Changed the CSS selector from <code>html.ie</code> to <code>html.lte8</code> to prevent CSS3 Pie from affecting IE9+, since they already understand <code>border-radius</code>.</li>
<li>Re-ordered the declarations to list the W3C-version last, so as browser implement the standard, it will be the one that affects page elements.</li>
</ul>
Cheers,
Atg]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1305224195.3498";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"aarontgrogg";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:63:{s:15:"comment_post_ID";s:2:"70";s:14:"comment_author";s:11:"aarontgrogg";s:20:"comment_author_email";s:21:"aarontgrogg@yahoo.com";s:18:"comment_author_url";s:23:"http://aarontgrogg.com/";s:15:"comment_content";s:372:"Updated:
<ul><li>Changed the CSS selector from <code>html.ie</code> to <code>html.lte8</code> to prevent CSS3 Pie from affecting IE9+, since they already understand <code>border-radius</code>.</li>
<li>Re-ordered the declarations to list the W3C-version last, so as browser implement the standard, it will be the one that affects page elements.</li>
</ul>
Cheers,
Atg";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"1";s:7:"user_ip";s:15:"209.251.200.243";s:10:"user_agent";s:111:"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2.17) Gecko/20110420 Firefox/3.6.17 (.NET CLR 3.5.30729)";s:8:"referrer";s:60:"http://aarontgrogg.com/practicalcss3/border-radius/css3-pie/";s:4:"blog";s:36:"http://aarontgrogg.com/practicalcss3";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:60:"http://aarontgrogg.com/practicalcss3/border-radius/css3-pie/";s:9:"user_role";s:25:"administrator,super_admin";s:21:"akismet_comment_nonce";s:6:"passed";s:12:"POST_comment";s:372:"Updated:
<ul><li>Changed the CSS selector from <code>html.ie</code> to <code>html.lte8</code> to prevent CSS3 Pie from affecting IE9+, since they already understand <code>border-radius</code>.</li>
<li>Re-ordered the declarations to list the W3C-version last, so as browser implement the standard, it will be the one that affects page elements.</li>
</ul>
Cheers,
Atg";s:11:"POST_submit";s:12:"Post Comment";s:20:"POST_comment_post_ID";s:2:"70";s:19:"POST_comment_parent";s:1:"0";s:32:"POST__wp_unfiltered_html_comment";s:10:"28f8540a6c";s:26:"POST_akismet_comment_nonce";s:10:"340108404d";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:35:"/practicalcss3/wp-comments-post.php";s:14:"CONTENT_LENGTH";s:3:"600";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:13:"DOCUMENT_ROOT";s:39:"/home/content/a/a/r/aarontgroggcom/html";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.7";s:20:"HTTP_ACCEPT_ENCODING";s:12:"gzip,deflate";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-us,en;q=0.5";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:11:"HTTP_COOKIE";s:0:"";s:9:"HTTP_HOST";s:15:"aarontgrogg.com";s:15:"HTTP_KEEP_ALIVE";s:3:"115";s:12:"HTTP_REFERER";s:60:"http://aarontgrogg.com/practicalcss3/border-radius/css3-pie/";s:15:"HTTP_USER_AGENT";s:111:"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2.17) Gecko/20110420 Firefox/3.6.17 (.NET CLR 3.5.30729)";s:4:"PATH";s:28:"/bin:/usr/bin:/usr/local/bin";s:9:"PATH_INFO";s:21:"/wp-comments-post.php";s:5:"PHPRC";s:39:"/home/content/a/a/r/aarontgroggcom/html";s:12:"QUERY_STRING";s:0:"";s:19:"REDIRECT_SCRIPT_URI";s:57:"http://aarontgrogg.com/practicalcss3/wp-comments-post.php";s:19:"REDIRECT_SCRIPT_URL";s:35:"/practicalcss3/wp-comments-post.php";s:15:"REDIRECT_STATUS";s:3:"200";s:12:"REDIRECT_URL";s:35:"/practicalcss3/wp-comments-post.php";s:11:"REMOTE_ADDR";s:15:"209.251.200.243";s:11:"REMOTE_PORT";s:5:"44940";s:14:"REQUEST_METHOD";s:4:"POST";s:15:"SCRIPT_FILENAME";s:60:"/home/content/a/a/r/aarontgroggcom/html/wp-comments-post.php";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:10:"SCRIPT_URI";s:57:"http://aarontgrogg.com/practicalcss3/wp-comments-post.php";s:10:"SCRIPT_URL";s:35:"/practicalcss3/wp-comments-post.php";s:11:"SERVER_ADDR";s:12:"72.167.232.6";s:12:"SERVER_ADMIN";s:26:"support@supportwebsite.com";s:11:"SERVER_NAME";s:15:"aarontgrogg.com";s:11:"SERVER_PORT";s:2:"80";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:16:"SERVER_SIGNATURE";s:67:"<ADDRESS>Apache/1.3.33 Server at aarontgrogg.com Port 80</ADDRESS>
";s:3:"SPI";s:4:"TRUE";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1305224194";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>home</title>
		<link>http://aarontgrogg.com/practicalcss3/</link>
		<pubDate>Fri, 10 Dec 2010 13:21:01 +0000</pubDate>
		<dc:creator>test</dc:creator>
		<guid isPermaLink="false">http://localhost/aarontgrogg/practicalcss3/</guid>
		<description></description>
		<content:encoded><![CDATA[				<h2>"Another CSS3 presentation?  <em>Really??</em>"</h2>
				<p>Well, yes, and no...</p>
				<p>We've all seen tons of presentations, posts, articles and tools showing what CSS3 can do and how to do it, in theory.  But each of the ones I've seen limit themselves to "what are the cool new features and how do you make them work, where they work".  But that isn't how reality works.</p>
				<p>This presentation will show you how to create several of the most commonly requested design effects using nothing but CSS (well, almost nothing but CSS).</p>
				<p>A couple quick notes:
					<ul>
						<li>This will be more of a demonstration than a presentation.  All the examples will be live code, and can be found here:<br /><a href="http://aarontgrogg.com/practicalcss3/">http://aarontgrogg.com/practicalcss3/</a></li>
						<li>This will be fairly technical (read: lots and lots code!).</li>
						<li>I will expect you have at least a mid-level knowledge of CSS, so <strong>please</strong> let me know if you have <strong>any</strong> questions.</li>
					</ul>
				</p>
				<h2>Process</h2>
				<p>This is <strong>not</strong> an extensive list of every conceivable method for getting CSS3 features across all browsers.  My first goal was to get as close to the "spec" as possible.  My next goal was to do it as <em>lightly</em> as possible (read: minimum overhead, minimum maintenance, maximum resuability).  This meant looking for solutions that could solve multiple issues with one application, if possible.</p>
				<p>While doing this, I make use of two fairly new innovations:</p>
				<ol>
					<li>the IE Conditional Comments idea from <a href="http://html5boilerplate.com/">HTML5 Boilerplate</a>, and</li>
					<li><a href="http://modernizr.com/">Modernizr</a></li>
				</ol>
				<p>This is all "doable" without them both, but A LOT easier with them; I highly recommend building them into your current structure.</p>
				<h2>Examples</h2>
				<p>Okay, let's get to the <code>code</code>!</p>
				<ul>
					<li><a href="background-gradient/">background-gradient</a></li>
					<li><a href="border-radius/">border-radius</a></li>
					<li><a href="box-shadow/">box-shadow</a></li>
					<li><a href="opacity/">opacity</a></li>
					<li><a href="rgba/">rgba</a></li>
					<li><a href="rotate-text/">rotate text</a></li>
					<li><a href="text-shadow/">text-shadow</a></li>
					<li><a href="animation/">animation</a></li>
				</ul>
				<h2><a href="fin/">Fin...</a></h2>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>72</wp:post_id>
		<wp:post_date>2010-12-10 08:21:01</wp:post_date>
		<wp:post_date_gmt>2010-12-10 13:21:01</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>home</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Internet Explorer Filters</title>
		<link>http://aarontgrogg.com/practicalcss3/box-shadow/internet-explorer-filters/</link>
		<pubDate>Tue, 14 Dec 2010 02:38:00 +0000</pubDate>
		<dc:creator>test</dc:creator>
		<guid isPermaLink="false">http://localhost/aarontgrogg/practicalcss3/</guid>
		<description></description>
		<content:encoded><![CDATA[<style>
div.entry-content div { margin: .75em 0 2em; padding: 10px; border: 3px solid #444; background: #fff;}
#example1 {
	-moz-box-shadow: 5px 5px 0 #666; /* FF3.5+ */
	-webkit-box-shadow: 5px 5px 0 #666; /* Saf3.0+, Chrome */
	box-shadow: 5px 5px 0 #666; /* Opera 10.5, IE9+, W3C  */
}
html.lte8 #example1 {
	filter: progid:DXImageTransform.Microsoft.DropShadow(color='#666666',offX='5',offY='5',positive='true'); /* IE6-8 */
	zoom: 1; /* 'hasLayout' required for filter */
}
#example2 {
	-moz-box-shadow: 5px 5px  5px #666; /* FF3.5+ */
	-webkit-box-shadow: 5px 5px  5px #666; /* Saf3.0+, Chrome */
	box-shadow: 5px 5px  5px #666; /* Opera 10.5, IE9+, W3C  */
}
html.lte8 #example2 {
	filter: progid:DXImageTransform.Microsoft.Shadow(color='#666666',direction='135',strength='5'); /* IE6-8 */
	zoom: 1; /* 'hasLayout' required for filter */
}
</style>
				<p>Internet Explorer Filters are a pure CSS implementation that, when used in conjunction with the HTML5 Boilerplate <code>&lt;html&gt;</code> conditional comments, requires no hacks and (almost) validates perfectly!</p>

				<p>Note that this CSS will not validate because <code>filter</code> is invalid.  If validation is important to you, this could be served via an IE-only stylesheet.</p>
				<p>There are two IE filters that apply something that is supposed to look like a drop-shadow: <a href="http://msdn.microsoft.com/en-us/library/ms532985%28v=VS.85%29.aspx">DropShadow</a> and <a href="http://msdn.microsoft.com/en-us/library/ms533086%28v=VS.85%29.aspx">Shadow</a>.  I know, how imaginative...</p>
				<p><code>DropShadow</code> creates a "separated" shadow look, with defined edges:</p>

<pre>
#example1 {
	-moz-box-shadow: 5px 5px 0 #666; /* FF3.5+ */
	-webkit-box-shadow: 5px 5px 0 #666; /* Saf3.0+, Chrome */
	box-shadow: 5px 5px 0 #666; /* Opera 10.5, IE9+, W3C  */
}
html.lte8 #example1 {
	filter: progid:DXImageTransform.Microsoft.DropShadow(color='#666666',offX='5',offY='5',positive='true'); /* IE6-8 */
	zoom: 1; /* 'hasLayout' required for filter */
}
</pre>
				<div id="example1">
					<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
				</div>

				<p><code>Shadow</code> creates a "connected" shadow look, with its edges still connected to the edges of the element, and the closest thing IE filters come to a "soft" edge:</p>
<pre>
#example2 {
	-moz-box-shadow: 5px 5px  5px #666; /* FF3.5+ */
	-webkit-box-shadow: 5px 5px  5px #666; /* Saf3.0+, Chrome */
	box-shadow: 5px 5px  5px #666; /* Opera 10.5, IE9+, W3C  */
}
html.lte8 #example2 {
	filter: progid:DXImageTransform.Microsoft.Shadow(color='#666666',direction='135',strength='5'); /* IE6-8 */
	zoom: 1; /* 'hasLayout' required for filter */
}
</pre>
				<div id="example2">
					<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>

				</div>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>77</wp:post_id>
		<wp:post_date>2010-12-13 21:38:00</wp:post_date>
		<wp:post_date_gmt>2010-12-14 02:38:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>internet-explorer-filters</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>39</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>32</wp:comment_id>
			<wp:comment_author><![CDATA[aarontgrogg]]></wp:comment_author>
			<wp:comment_author_email>aarontgrogg@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://aarontgrogg.com/</wp:comment_author_url>
			<wp:comment_author_IP>209.251.200.243</wp:comment_author_IP>
			<wp:comment_date>2011-05-12 14:23:28</wp:comment_date>
			<wp:comment_date_gmt>2011-05-12 18:23:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Updated:
<ul><li>Changed the CSS selector from <code>html.ie</code> to <code>html.lte8</code> to prevent the <code>filter</code> from affecting IE9+, since they already understand <code>box-shadow</code>.</li>
<li>Re-ordered the declarations to list the W3C-version last, so as browser implement the standard, it will be the one that affects page elements.</li>
</ul>
Cheers,
Atg]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1305224608.2375";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"aarontgrogg";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:63:{s:15:"comment_post_ID";s:2:"77";s:14:"comment_author";s:11:"aarontgrogg";s:20:"comment_author_email";s:21:"aarontgrogg@yahoo.com";s:18:"comment_author_url";s:23:"http://aarontgrogg.com/";s:15:"comment_content";s:384:"Updated:
<ul><li>Changed the CSS selector from <code>html.ie</code> to <code>html.lte8</code> to prevent the <code>filter</code> from affecting IE9+, since they already understand <code>box-shadow</code>.</li>
<li>Re-ordered the declarations to list the W3C-version last, so as browser implement the standard, it will be the one that affects page elements.</li>
</ul>
Cheers,
Atg";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"1";s:7:"user_ip";s:15:"209.251.200.243";s:10:"user_agent";s:111:"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2.17) Gecko/20110420 Firefox/3.6.17 (.NET CLR 3.5.30729)";s:8:"referrer";s:73:"http://aarontgrogg.com/practicalcss3/box-shadow/internet-explorer-filters";s:4:"blog";s:36:"http://aarontgrogg.com/practicalcss3";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:74:"http://aarontgrogg.com/practicalcss3/box-shadow/internet-explorer-filters/";s:9:"user_role";s:25:"administrator,super_admin";s:21:"akismet_comment_nonce";s:6:"passed";s:12:"POST_comment";s:384:"Updated:
<ul><li>Changed the CSS selector from <code>html.ie</code> to <code>html.lte8</code> to prevent the <code>filter</code> from affecting IE9+, since they already understand <code>box-shadow</code>.</li>
<li>Re-ordered the declarations to list the W3C-version last, so as browser implement the standard, it will be the one that affects page elements.</li>
</ul>
Cheers,
Atg";s:11:"POST_submit";s:12:"Post Comment";s:20:"POST_comment_post_ID";s:2:"77";s:19:"POST_comment_parent";s:1:"0";s:32:"POST__wp_unfiltered_html_comment";s:10:"b6dd8a6bb0";s:26:"POST_akismet_comment_nonce";s:10:"b88c0952b2";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:35:"/practicalcss3/wp-comments-post.php";s:14:"CONTENT_LENGTH";s:3:"622";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:13:"DOCUMENT_ROOT";s:39:"/home/content/a/a/r/aarontgroggcom/html";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.7";s:20:"HTTP_ACCEPT_ENCODING";s:12:"gzip,deflate";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-us,en;q=0.5";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:11:"HTTP_COOKIE";s:0:"";s:9:"HTTP_HOST";s:15:"aarontgrogg.com";s:15:"HTTP_KEEP_ALIVE";s:3:"115";s:12:"HTTP_REFERER";s:73:"http://aarontgrogg.com/practicalcss3/box-shadow/internet-explorer-filters";s:15:"HTTP_USER_AGENT";s:111:"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2.17) Gecko/20110420 Firefox/3.6.17 (.NET CLR 3.5.30729)";s:4:"PATH";s:28:"/bin:/usr/bin:/usr/local/bin";s:9:"PATH_INFO";s:21:"/wp-comments-post.php";s:5:"PHPRC";s:39:"/home/content/a/a/r/aarontgroggcom/html";s:12:"QUERY_STRING";s:0:"";s:19:"REDIRECT_SCRIPT_URI";s:57:"http://aarontgrogg.com/practicalcss3/wp-comments-post.php";s:19:"REDIRECT_SCRIPT_URL";s:35:"/practicalcss3/wp-comments-post.php";s:15:"REDIRECT_STATUS";s:3:"200";s:12:"REDIRECT_URL";s:35:"/practicalcss3/wp-comments-post.php";s:11:"REMOTE_ADDR";s:15:"209.251.200.243";s:11:"REMOTE_PORT";s:4:"4729";s:14:"REQUEST_METHOD";s:4:"POST";s:15:"SCRIPT_FILENAME";s:60:"/home/content/a/a/r/aarontgroggcom/html/wp-comments-post.php";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:10:"SCRIPT_URI";s:57:"http://aarontgrogg.com/practicalcss3/wp-comments-post.php";s:10:"SCRIPT_URL";s:35:"/practicalcss3/wp-comments-post.php";s:11:"SERVER_ADDR";s:12:"72.167.232.6";s:12:"SERVER_ADMIN";s:26:"support@supportwebsite.com";s:11:"SERVER_NAME";s:15:"aarontgrogg.com";s:11:"SERVER_PORT";s:2:"80";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:16:"SERVER_SIGNATURE";s:67:"<ADDRESS>Apache/1.3.33 Server at aarontgrogg.com Port 80</ADDRESS>
";s:3:"SPI";s:4:"TRUE";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1305224607";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>CSS3 PIE</title>
		<link>http://aarontgrogg.com/practicalcss3/box-shadow/css3-pie/</link>
		<pubDate>Tue, 14 Dec 2010 02:41:52 +0000</pubDate>
		<dc:creator>test</dc:creator>
		<guid isPermaLink="false">http://localhost/aarontgrogg/practicalcss3/</guid>
		<description></description>
		<content:encoded><![CDATA[<style>
div.entry-content div { margin: .75em 0 2em; padding: 10px; border: 3px solid #444; background: #fff;}
#example1 {
	-moz-box-shadow: 5px 5px 0 #666; /* FF3.5+ */
	-webkit-box-shadow: 5px 5px 0 #666; /* Saf3.0+, Chrome */
	box-shadow: 5px 5px 0 #666; /* Opera 10.5, IE9+, W3C  */
}
html.lte8 #example1 {
	behavior: url('../../wp-content/themes/practicalcss3/css3-pie.htc'); /* IE6-8 */
	zoom: 1; /* 'hasLayout' required for HTC method */
}
#example2 {
	-moz-box-shadow: 5px 5px  5px #666; /* FF3.5+ */
	-webkit-box-shadow: 5px 5px  5px #666; /* Saf3.0+, Chrome */
	box-shadow: 5px 5px  5px #666; /* Opera 10.5, IE9+, W3C  */
}
html.lte8 #example2 {
	behavior: url('../../wp-content/themes/practicalcss3/css3-pie.htc'); /* IE6-8 */
	zoom: 1; /* 'hasLayout' required for HTC method */
}
</style>
				<p><a href="http://css3pie.com/">CSS3 <abbr title="Progressive Internet Explorer">PIE</abbr></a> is an <abbr title="HTML Component">HTC</abbr> file that allows you to use standard CSS3 (plus vendor prefixes) to get features such as linear background gradients, rounded corners and drop-shadows in all browsers.  HTC files are applied using a <code>behavior</code> in your CSS, which is IE-only, and does <strong>not</strong> validate.</p>

<pre>
#example1 {
	-moz-box-shadow: 5px 5px 0 #666; /* FF3.5+ */
	-webkit-box-shadow: 5px 5px 0 #666; /* Saf3.0+, Chrome */
	box-shadow: 5px 5px 0 #666; /* Opera 10.5, IE9+, W3C  */
}
html.lte8 #example1 {
	behavior: url('../../wp-content/themes/practicalcss3/css3-pie.htc'); /* IE6-8 */
	zoom: 1; /* 'hasLayout' required for HTC method */
}
</pre>
				<div id="example1">
					<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
				</div>

				<p>Another example with a "connected", "soft edge" shadow look:</p>
<pre>
#example2 {
	-moz-box-shadow: 5px 5px  5px #666; /* FF3.5+ */
	-webkit-box-shadow: 5px 5px  5px #666; /* Saf3.0+, Chrome */
	box-shadow: 5px 5px  5px #666; /* Opera 10.5, IE9+, W3C  */
}
html.lte8 #example2 {
	behavior: url('../../wp-content/themes/practicalcss3/css3-pie.htc'); /* IE6-8 */
	zoom: 1; /* 'hasLayout' required for HTC method */
}
</pre>
				<div id="example2">
					<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>

				</div>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>79</wp:post_id>
		<wp:post_date>2010-12-13 21:41:52</wp:post_date>
		<wp:post_date_gmt>2010-12-14 02:41:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>css3-pie</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>39</wp:post_parent>
		<wp:menu_order>2</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>33</wp:comment_id>
			<wp:comment_author><![CDATA[aarontgrogg]]></wp:comment_author>
			<wp:comment_author_email>aarontgrogg@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://aarontgrogg.com/</wp:comment_author_url>
			<wp:comment_author_IP>209.251.200.243</wp:comment_author_IP>
			<wp:comment_date>2011-05-12 14:30:40</wp:comment_date>
			<wp:comment_date_gmt>2011-05-12 18:30:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Updated:
<ul><li>Changed the CSS selector from <code>html.ie</code> to <code>html.lte8</code> to prevent CSS3 Pie from affecting IE9+, since they already understand <code>border-radius</code>.</li>
<li>Re-ordered the declarations to list the W3C-version last, so as browser implement the standard, it will be the one that affects page elements.</li>
</ul>
Cheers,
Atg]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1305225040.8639";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"aarontgrogg";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:63:{s:15:"comment_post_ID";s:2:"79";s:14:"comment_author";s:11:"aarontgrogg";s:20:"comment_author_email";s:21:"aarontgrogg@yahoo.com";s:18:"comment_author_url";s:23:"http://aarontgrogg.com/";s:15:"comment_content";s:372:"Updated:
<ul><li>Changed the CSS selector from <code>html.ie</code> to <code>html.lte8</code> to prevent CSS3 Pie from affecting IE9+, since they already understand <code>border-radius</code>.</li>
<li>Re-ordered the declarations to list the W3C-version last, so as browser implement the standard, it will be the one that affects page elements.</li>
</ul>
Cheers,
Atg";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"1";s:7:"user_ip";s:15:"209.251.200.243";s:10:"user_agent";s:111:"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2.17) Gecko/20110420 Firefox/3.6.17 (.NET CLR 3.5.30729)";s:8:"referrer";s:56:"http://aarontgrogg.com/practicalcss3/box-shadow/css3-pie";s:4:"blog";s:36:"http://aarontgrogg.com/practicalcss3";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:57:"http://aarontgrogg.com/practicalcss3/box-shadow/css3-pie/";s:9:"user_role";s:25:"administrator,super_admin";s:21:"akismet_comment_nonce";s:6:"passed";s:12:"POST_comment";s:372:"Updated:
<ul><li>Changed the CSS selector from <code>html.ie</code> to <code>html.lte8</code> to prevent CSS3 Pie from affecting IE9+, since they already understand <code>border-radius</code>.</li>
<li>Re-ordered the declarations to list the W3C-version last, so as browser implement the standard, it will be the one that affects page elements.</li>
</ul>
Cheers,
Atg";s:11:"POST_submit";s:12:"Post Comment";s:20:"POST_comment_post_ID";s:2:"79";s:19:"POST_comment_parent";s:1:"0";s:32:"POST__wp_unfiltered_html_comment";s:10:"a5614df6f9";s:26:"POST_akismet_comment_nonce";s:10:"a7afe3099f";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:35:"/practicalcss3/wp-comments-post.php";s:14:"CONTENT_LENGTH";s:3:"600";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:13:"DOCUMENT_ROOT";s:39:"/home/content/a/a/r/aarontgroggcom/html";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.7";s:20:"HTTP_ACCEPT_ENCODING";s:12:"gzip,deflate";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-us,en;q=0.5";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:11:"HTTP_COOKIE";s:0:"";s:9:"HTTP_HOST";s:15:"aarontgrogg.com";s:15:"HTTP_KEEP_ALIVE";s:3:"115";s:12:"HTTP_REFERER";s:56:"http://aarontgrogg.com/practicalcss3/box-shadow/css3-pie";s:15:"HTTP_USER_AGENT";s:111:"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2.17) Gecko/20110420 Firefox/3.6.17 (.NET CLR 3.5.30729)";s:4:"PATH";s:28:"/bin:/usr/bin:/usr/local/bin";s:9:"PATH_INFO";s:21:"/wp-comments-post.php";s:5:"PHPRC";s:39:"/home/content/a/a/r/aarontgroggcom/html";s:12:"QUERY_STRING";s:0:"";s:19:"REDIRECT_SCRIPT_URI";s:57:"http://aarontgrogg.com/practicalcss3/wp-comments-post.php";s:19:"REDIRECT_SCRIPT_URL";s:35:"/practicalcss3/wp-comments-post.php";s:15:"REDIRECT_STATUS";s:3:"200";s:12:"REDIRECT_URL";s:35:"/practicalcss3/wp-comments-post.php";s:11:"REMOTE_ADDR";s:15:"209.251.200.243";s:11:"REMOTE_PORT";s:5:"52858";s:14:"REQUEST_METHOD";s:4:"POST";s:15:"SCRIPT_FILENAME";s:60:"/home/content/a/a/r/aarontgroggcom/html/wp-comments-post.php";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:10:"SCRIPT_URI";s:57:"http://aarontgrogg.com/practicalcss3/wp-comments-post.php";s:10:"SCRIPT_URL";s:35:"/practicalcss3/wp-comments-post.php";s:11:"SERVER_ADDR";s:12:"72.167.232.6";s:12:"SERVER_ADMIN";s:26:"support@supportwebsite.com";s:11:"SERVER_NAME";s:15:"aarontgrogg.com";s:11:"SERVER_PORT";s:2:"80";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:16:"SERVER_SIGNATURE";s:67:"<ADDRESS>Apache/1.3.33 Server at aarontgrogg.com Port 80</ADDRESS>
";s:3:"SPI";s:4:"TRUE";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1305225040";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Internet Explorer Filters</title>
		<link>http://aarontgrogg.com/practicalcss3/opacity/internet-explorer-filters/</link>
		<pubDate>Tue, 14 Dec 2010 02:44:14 +0000</pubDate>
		<dc:creator>test</dc:creator>
		<guid isPermaLink="false">http://localhost/aarontgrogg/practicalcss3/</guid>
		<description></description>
		<content:encoded><![CDATA[<style>
div.entry-content div { margin: .75em 0; padding: 10px; border: 3px solid #444; background: #fff;}
#example1 {
	opacity: .5; /* Everything except IE */
}
html.lte8 #example1 {
	filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=50); /* IE6-8 */
	zoom: 1; /* 'hasLayout' required for filters */
}
</style>
				<p>Internet Explorer Filters are a pure CSS implementation that, when used in conjunction with the HTML5 Boilerplate <code>&lt;html&gt;</code> conditional comments, requires no hacks and (almost) validates perfectly!</p>

				<p>Note that this CSS will not validate because <code>filter</code> is invalid.  If validation is important to you, this could be served via an IE-only stylesheet.</p>
				<p><s>There are two separate IE filters that handle opacity, one for IE6 and 7, and another for IE8.</s> (Scrapped the <code>-ms-filter</code>... who needs it?)</p>
<pre>
#example1 {
	opacity: .5; /* Everything except IE */
}
html.lte8 #example1 {
	filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=50); /* IE6-8 */
	zoom: 1; /* 'hasLayout' required for filters */
}
</pre>

				<div id="example1">
					<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
				</div>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>83</wp:post_id>
		<wp:post_date>2010-12-13 21:44:14</wp:post_date>
		<wp:post_date_gmt>2010-12-14 02:44:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>internet-explorer-filters</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>41</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>34</wp:comment_id>
			<wp:comment_author><![CDATA[aarontgrogg]]></wp:comment_author>
			<wp:comment_author_email>aarontgrogg@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://aarontgrogg.com/</wp:comment_author_url>
			<wp:comment_author_IP>209.251.200.243</wp:comment_author_IP>
			<wp:comment_date>2011-05-12 14:38:02</wp:comment_date>
			<wp:comment_date_gmt>2011-05-12 18:38:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Updated:
<ul><li>Changed the CSS selector from <code>html.ie</code> to <code>html.lte8</code> to prevent the <code>filter</code> from affecting IE9+.</li>
<li>Dumped <code>-ms-filter</code>, cause, do we really need <em>another</em> line of CSS here?  Especially since the plain old <code>filter</code> still works just fine...</li>
</ul>
Cheers,
Atg]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1305225482.9131";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"aarontgrogg";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:63:{s:15:"comment_post_ID";s:2:"83";s:14:"comment_author";s:11:"aarontgrogg";s:20:"comment_author_email";s:21:"aarontgrogg@yahoo.com";s:18:"comment_author_url";s:23:"http://aarontgrogg.com/";s:15:"comment_content";s:355:"Updated:
<ul><li>Changed the CSS selector from <code>html.ie</code> to <code>html.lte8</code> to prevent the <code>filter</code> from affecting IE9+.</li>
<li>Dumped <code>-ms-filter</code>, cause, do we really need <em>another</em> line of CSS here?  Especially since the plain old <code>filter</code> still works just fine...</li>
</ul>
Cheers,
Atg";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"1";s:7:"user_ip";s:15:"209.251.200.243";s:10:"user_agent";s:111:"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2.17) Gecko/20110420 Firefox/3.6.17 (.NET CLR 3.5.30729)";s:8:"referrer";s:71:"http://aarontgrogg.com/practicalcss3/opacity/internet-explorer-filters/";s:4:"blog";s:36:"http://aarontgrogg.com/practicalcss3";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:71:"http://aarontgrogg.com/practicalcss3/opacity/internet-explorer-filters/";s:9:"user_role";s:25:"administrator,super_admin";s:21:"akismet_comment_nonce";s:6:"passed";s:12:"POST_comment";s:355:"Updated:
<ul><li>Changed the CSS selector from <code>html.ie</code> to <code>html.lte8</code> to prevent the <code>filter</code> from affecting IE9+.</li>
<li>Dumped <code>-ms-filter</code>, cause, do we really need <em>another</em> line of CSS here?  Especially since the plain old <code>filter</code> still works just fine...</li>
</ul>
Cheers,
Atg";s:11:"POST_submit";s:12:"Post Comment";s:20:"POST_comment_post_ID";s:2:"83";s:19:"POST_comment_parent";s:1:"0";s:32:"POST__wp_unfiltered_html_comment";s:10:"edab6e1231";s:26:"POST_akismet_comment_nonce";s:10:"ad453581ae";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:35:"/practicalcss3/wp-comments-post.php";s:14:"CONTENT_LENGTH";s:3:"613";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:13:"DOCUMENT_ROOT";s:39:"/home/content/a/a/r/aarontgroggcom/html";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.7";s:20:"HTTP_ACCEPT_ENCODING";s:12:"gzip,deflate";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-us,en;q=0.5";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:11:"HTTP_COOKIE";s:0:"";s:9:"HTTP_HOST";s:15:"aarontgrogg.com";s:15:"HTTP_KEEP_ALIVE";s:3:"115";s:12:"HTTP_REFERER";s:71:"http://aarontgrogg.com/practicalcss3/opacity/internet-explorer-filters/";s:15:"HTTP_USER_AGENT";s:111:"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2.17) Gecko/20110420 Firefox/3.6.17 (.NET CLR 3.5.30729)";s:4:"PATH";s:28:"/bin:/usr/bin:/usr/local/bin";s:9:"PATH_INFO";s:21:"/wp-comments-post.php";s:5:"PHPRC";s:39:"/home/content/a/a/r/aarontgroggcom/html";s:12:"QUERY_STRING";s:0:"";s:19:"REDIRECT_SCRIPT_URI";s:57:"http://aarontgrogg.com/practicalcss3/wp-comments-post.php";s:19:"REDIRECT_SCRIPT_URL";s:35:"/practicalcss3/wp-comments-post.php";s:15:"REDIRECT_STATUS";s:3:"200";s:12:"REDIRECT_URL";s:35:"/practicalcss3/wp-comments-post.php";s:11:"REMOTE_ADDR";s:15:"209.251.200.243";s:11:"REMOTE_PORT";s:5:"52264";s:14:"REQUEST_METHOD";s:4:"POST";s:15:"SCRIPT_FILENAME";s:60:"/home/content/a/a/r/aarontgroggcom/html/wp-comments-post.php";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:10:"SCRIPT_URI";s:57:"http://aarontgrogg.com/practicalcss3/wp-comments-post.php";s:10:"SCRIPT_URL";s:35:"/practicalcss3/wp-comments-post.php";s:11:"SERVER_ADDR";s:12:"72.167.232.6";s:12:"SERVER_ADMIN";s:26:"support@supportwebsite.com";s:11:"SERVER_NAME";s:15:"aarontgrogg.com";s:11:"SERVER_PORT";s:2:"80";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:16:"SERVER_SIGNATURE";s:67:"<ADDRESS>Apache/1.3.33 Server at aarontgrogg.com Port 80</ADDRESS>
";s:3:"SPI";s:4:"TRUE";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1305225482";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>eCSStender</title>
		<link>http://aarontgrogg.com/practicalcss3/opacity/ecsstender/</link>
		<pubDate>Tue, 14 Dec 2010 02:47:24 +0000</pubDate>
		<dc:creator>test</dc:creator>
		<guid isPermaLink="false">http://localhost/aarontgrogg/practicalcss3/</guid>
		<description></description>
		<content:encoded><![CDATA[<script src="../../wp-content/themes/practicalcss3/eCSStender.js"></script>
<script src="../../wp-content/themes/practicalcss3/eCSStender.CSS3-color.js"></script>
<style>
div.entry-content div { margin: .75em 0; padding: 10px; border: 3px solid #444; background: #fff;}
#example1 {
	opacity: .5; /* EVERYBODY! */
}
</style>
				<p><a href="http://ecsstender.org/">eCSStender</a> is pure-JS solution that uses a series of community-created <a href="http://ecsstender.org/extensions">extensions</a> to add CSS3 features to ALL browsers, <strong>no vendor prefixes required</strong>:</p>

<pre>
&lt;!-- concatenate scripts to reduce HTTP Requests, unless using other extensions on other pages, then benefit from caching Core --&gt;
&lt;script src="../../wp-content/themes/practicalcss3/eCSStender.js"&gt;&lt;/script&gt;
&lt;script src="../../wp-content/themes/practicalcss3/eCSStender.CSS3-color.js"&gt;&lt;/script&gt;
&lt;style&gt;
#example1 {
	opacity: .5; /* EVERYBODY! */
}
&lt;/style&gt;
</pre>

				<div id="example1">
					<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
				</div>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>85</wp:post_id>
		<wp:post_date>2010-12-13 21:47:24</wp:post_date>
		<wp:post_date_gmt>2010-12-14 02:47:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ecsstender</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>41</wp:post_parent>
		<wp:menu_order>2</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Internet Explorer Filters</title>
		<link>http://aarontgrogg.com/practicalcss3/rgba/internet-explorer-filters/</link>
		<pubDate>Tue, 14 Dec 2010 02:48:49 +0000</pubDate>
		<dc:creator>test</dc:creator>
		<guid isPermaLink="false">http://localhost/aarontgrogg/practicalcss3/</guid>
		<description></description>
		<content:encoded><![CDATA[<style>
div.entry-content div { margin: .75em 0; padding: 10px; border: 3px solid #444; background: #fff; }
#example1 { background: url('../../wp-content/themes/practicalcss3/bg-pattern.jpg'); }
#example1 p {
	background: rgb(81,57,61); /* always have a non-alpha color, just in case */
	background: rgba(123,123,123,.5); /* Everything except IE */
}
html.lte8 #example1 p {
	background: none; /* the filters require the background to be none */
	filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#7F7B7B7B,endColorstr=#7F7B7B7B); /* IE6-8 */
	zoom: 1; /* 'hasLayout' required for filters */
}
</style>
				<p>Internet Explorer Filters are a pure CSS implementation that, when used in conjunction with the HTML5 Boilerplate <code>&lt;html&gt;</code> conditional comments, requires no hacks and (almost) validates perfectly!</p>
				<p>Note that this CSS will not validate because <code>filter</code> is invalid.  If validation is important to you, this could be served via an IE-only stylesheet.</p>
				<p><s>There are two separate IE filters that handle opacity, one for IE6 and 7, and another for IE8.</s> (Scrapped the <code>-ms-filter</code>â€¦ who needs it?)</p>
<pre>
#example1 { background: url('../../wp-content/themes/practicalcss3/bg-pattern.jpg'); }
#example1 p {
	background: rgb(81,57,61); /* always have a non-alpha color, just in case */
	background: rgba(123,123,123,.5); /* Everything except IE */
}
html.lte8 #example1 p {
	background: none; /* the filters require the background to be none */
	filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#7F7B7B7B,endColorstr=#7F7B7B7B); /* IE6-8 */
	zoom: 1; /* 'hasLayout' required for filters */
</pre>

				<div id="example1">
					<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
				</div>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>87</wp:post_id>
		<wp:post_date>2010-12-13 21:48:49</wp:post_date>
		<wp:post_date_gmt>2010-12-14 02:48:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>internet-explorer-filters</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>43</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Internet Explorer Filters</title>
		<link>http://aarontgrogg.com/practicalcss3/rotate-text/internet-explorer-filters/</link>
		<pubDate>Tue, 14 Dec 2010 02:50:24 +0000</pubDate>
		<dc:creator>test</dc:creator>
		<guid isPermaLink="false">http://localhost/aarontgrogg/practicalcss3/</guid>
		<description></description>
		<content:encoded><![CDATA[<style>
div.entry-content div { margin: .75em 0; padding: 10px; border: 3px solid #444; background: #fff; position: relative; }
#example1 p {
	margin-left: 30px;
}
#example1 p.date {
	background: red;
	margin: 0;
	position: absolute; /* required to force placement within parent */
	top: 35px;
	left: 0;
	-moz-transform: rotate(-90deg); /* FF */
	-o-transform: rotate(-90deg); /* Opera */
	-webkit-transform: rotate(-90deg); /* Safari and Chrome */
	transform: rotate(-90deg); /* IE9+, W3C */
}
html.lte8 #example1 p.date {
	top: 25px; /* required to force placement within parent */
	left: 10px;
	/* Rotation values 0, 1, 2, 3 represent 0, 90, 180, 270 degrees respectively */
	filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3); /* IE6-8 */
	zoom: 1; /* 'hasLayout' required for filters */
}
</style>
				<p>Internet Explorer Filters are a pure CSS implementation that, when used in conjunction with the HTML5 Boilerplate <code>&lt;html&gt;</code> conditional comments, requires no hacks and (almost) validates perfectly!</p>
				<p>Note that this CSS will not validate because <code>filter</code> is invalid.  If validation is important to you, this could be served via an IE-only stylesheet.</p>
				<p><s>There are two separate IE filters that handle opacity, one for IE6 and 7, and another for IE8.</s> (Scrapped the <code>-ms-filter</code>â€¦ who needs it?)</p>
<pre>
#example1 p {
	margin-left: 30px;
}
#example1 p.date {
	background: red;
	margin: 0;
	position: absolute; /* required to force placement within parent */
	top: 35px;
	left: 0;
	-moz-transform: rotate(-90deg); /* FF */
	-o-transform: rotate(-90deg); /* Opera */
	-webkit-transform: rotate(-90deg); /* Safari and Chrome */
	transform: rotate(-90deg); /* IE9+, W3C */
}
html.lte8 #example1 p.date {
	top: 25px; /* required to force placement within parent */
	left: 10px;
	/* Rotation values 0, 1, 2, 3 represent 0, 90, 180, 270 degrees respectively */
	filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3); /* IE6-8 */
	zoom: 1; /* 'hasLayout' required for filters */
}
</pre>
				<p>Note: Both the IE- and non-IE versions require additional CSS to adjust spacing, and both require you to apply margins and padding as if the element were <em>not</em> rotated (<code>top: 10px;</code> will add 10 pixels to the "top" of the element, which is really the "end" of the line of text...).</p>
				<div id="example1">
					<p class="date">Dec 31</p>
					<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
				</div>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>89</wp:post_id>
		<wp:post_date>2010-12-13 21:50:24</wp:post_date>
		<wp:post_date_gmt>2010-12-14 02:50:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>internet-explorer-filters</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>45</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>35</wp:comment_id>
			<wp:comment_author><![CDATA[aarontgrogg]]></wp:comment_author>
			<wp:comment_author_email>aarontgrogg@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://aarontgrogg.com/</wp:comment_author_url>
			<wp:comment_author_IP>209.251.200.243</wp:comment_author_IP>
			<wp:comment_date>2011-05-12 15:14:14</wp:comment_date>
			<wp:comment_date_gmt>2011-05-12 19:14:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Updated:
<ul><li>Changed the CSS selector from <code>html.ie</code> to <code>html.lte8</code> to prevent the <code>filter</code> from affecting IE9+.</li>
<li>Dumped <code>-ms-filter</code>, cause, do we really need <em>another</em> line of CSS here?  Especially since the plain old <code>filter</code> still works just fine...</li>
<li>Re-ordered the declarations to list the W3C-version last, so as browser implement the standard, it will be the one that affects page elements.</li>
</ul>
Cheers,
Atg]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1305227654.9581";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"aarontgrogg";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:63:{s:15:"comment_post_ID";s:2:"89";s:14:"comment_author";s:11:"aarontgrogg";s:20:"comment_author_email";s:21:"aarontgrogg@yahoo.com";s:18:"comment_author_url";s:23:"http://aarontgrogg.com/";s:15:"comment_content";s:508:"Updated:
<ul><li>Changed the CSS selector from <code>html.ie</code> to <code>html.lte8</code> to prevent the <code>filter</code> from affecting IE9+.</li>
<li>Dumped <code>-ms-filter</code>, cause, do we really need <em>another</em> line of CSS here?  Especially since the plain old <code>filter</code> still works just fine...</li>
<li>Re-ordered the declarations to list the W3C-version last, so as browser implement the standard, it will be the one that affects page elements.</li>
</ul>
Cheers,
Atg";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"1";s:7:"user_ip";s:15:"209.251.200.243";s:10:"user_agent";s:111:"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2.17) Gecko/20110420 Firefox/3.6.17 (.NET CLR 3.5.30729)";s:8:"referrer";s:75:"http://aarontgrogg.com/practicalcss3/rotate-text/internet-explorer-filters/";s:4:"blog";s:36:"http://aarontgrogg.com/practicalcss3";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:75:"http://aarontgrogg.com/practicalcss3/rotate-text/internet-explorer-filters/";s:9:"user_role";s:25:"administrator,super_admin";s:21:"akismet_comment_nonce";s:6:"passed";s:12:"POST_comment";s:508:"Updated:
<ul><li>Changed the CSS selector from <code>html.ie</code> to <code>html.lte8</code> to prevent the <code>filter</code> from affecting IE9+.</li>
<li>Dumped <code>-ms-filter</code>, cause, do we really need <em>another</em> line of CSS here?  Especially since the plain old <code>filter</code> still works just fine...</li>
<li>Re-ordered the declarations to list the W3C-version last, so as browser implement the standard, it will be the one that affects page elements.</li>
</ul>
Cheers,
Atg";s:11:"POST_submit";s:12:"Post Comment";s:20:"POST_comment_post_ID";s:2:"89";s:19:"POST_comment_parent";s:1:"0";s:32:"POST__wp_unfiltered_html_comment";s:10:"f89980dc73";s:26:"POST_akismet_comment_nonce";s:10:"fdf6483c78";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:35:"/practicalcss3/wp-comments-post.php";s:14:"CONTENT_LENGTH";s:3:"784";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:13:"DOCUMENT_ROOT";s:39:"/home/content/a/a/r/aarontgroggcom/html";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.7";s:20:"HTTP_ACCEPT_ENCODING";s:12:"gzip,deflate";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-us,en;q=0.5";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:11:"HTTP_COOKIE";s:0:"";s:9:"HTTP_HOST";s:15:"aarontgrogg.com";s:15:"HTTP_KEEP_ALIVE";s:3:"115";s:12:"HTTP_REFERER";s:75:"http://aarontgrogg.com/practicalcss3/rotate-text/internet-explorer-filters/";s:15:"HTTP_USER_AGENT";s:111:"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2.17) Gecko/20110420 Firefox/3.6.17 (.NET CLR 3.5.30729)";s:4:"PATH";s:28:"/bin:/usr/bin:/usr/local/bin";s:9:"PATH_INFO";s:21:"/wp-comments-post.php";s:5:"PHPRC";s:39:"/home/content/a/a/r/aarontgroggcom/html";s:12:"QUERY_STRING";s:0:"";s:19:"REDIRECT_SCRIPT_URI";s:57:"http://aarontgrogg.com/practicalcss3/wp-comments-post.php";s:19:"REDIRECT_SCRIPT_URL";s:35:"/practicalcss3/wp-comments-post.php";s:15:"REDIRECT_STATUS";s:3:"200";s:12:"REDIRECT_URL";s:35:"/practicalcss3/wp-comments-post.php";s:11:"REMOTE_ADDR";s:15:"209.251.200.243";s:11:"REMOTE_PORT";s:5:"64633";s:14:"REQUEST_METHOD";s:4:"POST";s:15:"SCRIPT_FILENAME";s:60:"/home/content/a/a/r/aarontgroggcom/html/wp-comments-post.php";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:10:"SCRIPT_URI";s:57:"http://aarontgrogg.com/practicalcss3/wp-comments-post.php";s:10:"SCRIPT_URL";s:35:"/practicalcss3/wp-comments-post.php";s:11:"SERVER_ADDR";s:12:"72.167.232.6";s:12:"SERVER_ADMIN";s:26:"support@supportwebsite.com";s:11:"SERVER_NAME";s:15:"aarontgrogg.com";s:11:"SERVER_PORT";s:2:"80";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:16:"SERVER_SIGNATURE";s:67:"<ADDRESS>Apache/1.3.33 Server at aarontgrogg.com Port 80</ADDRESS>
";s:3:"SPI";s:4:"TRUE";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1305227654";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>sitemap</title>
		<link>http://aarontgrogg.com/practicalcss3/?page_id=242</link>
		<pubDate>Thu, 12 May 2011 20:41:01 +0000</pubDate>
		<dc:creator>aarontgrogg</dc:creator>
		<guid isPermaLink="false">http://aarontgrogg.com/practicalcss3/?page_id=242</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>242</wp:post_id>
		<wp:post_date>2011-05-12 16:41:01</wp:post_date>
		<wp:post_date_gmt>2011-05-12 20:41:01</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>sitemap</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[sitemap.php]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Internet Explorer Filters</title>
		<link>http://aarontgrogg.com/practicalcss3/text-shadow/internet-explorer-filters/</link>
		<pubDate>Tue, 14 Dec 2010 02:52:31 +0000</pubDate>
		<dc:creator>test</dc:creator>
		<guid isPermaLink="false">http://localhost/aarontgrogg/practicalcss3/</guid>
		<description></description>
		<content:encoded><![CDATA[<style>
div.entry-content div { margin: .75em 0; padding: 10px; border: 3px solid #444; background: #fff; }
#example1 p {
	text-shadow: 2px 2px 2px #8F8F8F; /* Everyone except IE */
}
html.ie #example1 p {
	filter: progid:DXImageTransform.Microsoft.DropShadow(color=#3F000000, offx=2, offy=2); /* IE */
	zoom: 1; /* 'hasLayout' required for filters */
}
#example2 p {
	text-shadow: 2px 2px 2px #8F8F8F; /* Everyone except IE */
}
html.ie #example2 p {
	/* "strength" is essentially the distance the "length" of the glow */
	filter: progid:DXImageTransform.Microsoft.Glow(color=#33CCCCCC,strength=2); /* IE */
	zoom: 1; /* 'hasLayout' required for filters */
}
#example3 p {
	text-shadow: 2px 2px 2px #8F8F8F; /* Everyone except IE */
}
html.ie #example3 p {
	filter: progid:DXImageTransform.Microsoft.DropShadow(color=#33E2E2E2, offx=4, offy=4)
		progid:DXImageTransform.Microsoft.Glow(color=#33BEBEBE, strength=2); /* IE */
	zoom: 1; /* 'hasLayout' required for filters */
}
</style>
				<p>Internet Explorer Filters are a pure CSS implementation that, when used in conjunction with the HTML5 Boilerplate <code>&lt;html&gt;</code> conditional comments, requires no hacks and (almost) validates perfectly!</p>
				<p>Note that this CSS will not validate because <code>filter</code> is invalid.  If validation is important to you, this could be served via an IE-only stylesheet.</p>
				<p>There are again separate IE filters for IE6/7 and IE8.</p>
				<p>In this first example, I show the <code>text-shadow</code> CSS (understood by all modern browsers) and just the <code>DropShadow</code>filter, which creates a "copy" of the text, offset as specified; it looks a little odd at anything more than 1 pixel offset, unless you play with the color value, as I did here, using the ARGB version of an RGBA... (<a href="http://aarontgrogg.com/practicalcss3/rgba/">read more about RGBA/ARGB</a>):</p>
<pre>
#example1 p {
	text-shadow: 2px 2px 2px #8F8F8F; /* Everyone except IE */
}
html.ie #example1 p {
	filter: progid:DXImageTransform.Microsoft.DropShadow(color=#3F000000, offx=2, offy=2); /* IE */
	zoom: 1; /* 'hasLayout' required for filters */
}
</pre>
				<div id="example1">
					<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
				</div>
				<p>There is also a <code>glow</code> filter that fades the text, but you lack the ability to determine the direction in which it fades (note that I played with the color on the <code>filter</code> again, using an ARGB value):</p>

<pre>
#example2 p {
	text-shadow: 2px 2px 2px #8F8F8F; /* Everyone except IE */
}
html.ie #example2 p {
	/* "strength" is essentially the distance the "length" of the glow */
	filter: progid:DXImageTransform.Microsoft.Glow(color=#33CCCCCC,strength=2); /* IE */
	zoom: 1; /* 'hasLayout' required for filters */
}
</pre>
				<div id="example2">
					<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
				</div>
				<p>However, by combining the two (you can combine multiple filters by simply separating them with spaces), you get something that is a little more palatable (note that I "reduced" the hex color since they will be combined together via the filters):</p>
<pre>
#example3 p {
	text-shadow: 2px 2px 2px #8F8F8F; /* Everyone except IE */
}
html.ie #example3 p {
	filter: progid:DXImageTransform.Microsoft.DropShadow(color=#33E2E2E2, offx=4, offy=4)
		progid:DXImageTransform.Microsoft.Glow(color=#33BEBEBE, strength=2); /* IE */
	zoom: 1; /* 'hasLayout' required for filters */
}
</pre>
				<div id="example3">
					<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
				</div>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>91</wp:post_id>
		<wp:post_date>2010-12-13 21:52:31</wp:post_date>
		<wp:post_date_gmt>2010-12-14 02:52:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>internet-explorer-filters</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>47</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>36</wp:comment_id>
			<wp:comment_author><![CDATA[aarontgrogg]]></wp:comment_author>
			<wp:comment_author_email>aarontgrogg@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://aarontgrogg.com/</wp:comment_author_url>
			<wp:comment_author_IP>209.251.200.243</wp:comment_author_IP>
			<wp:comment_date>2011-05-12 15:23:54</wp:comment_date>
			<wp:comment_date_gmt>2011-05-12 19:23:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Updated:
<ul><li>With IE10 support of <code>text-shadow</code> still unknown, I'm leaving the CSS selector as <code>html.ie</code> to affect all versions of IE.</li>
<li>Dumped <code>-ms-filter</code>, cause, do we really need <em>another</em> line of CSS here?  Especially since the plain old <code>filter</code> still works just fine...</li>
</ul>
Cheers,
Atg]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1305228234.5824";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"aarontgrogg";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:63:{s:15:"comment_post_ID";s:2:"91";s:14:"comment_author";s:11:"aarontgrogg";s:20:"comment_author_email";s:21:"aarontgrogg@yahoo.com";s:18:"comment_author_url";s:23:"http://aarontgrogg.com/";s:15:"comment_content";s:366:"Updated:
<ul><li>With IE10 support of <code>text-shadow</code> still unknown, I'm leaving the CSS selector as <code>html.ie</code> to affect all versions of IE.</li>
<li>Dumped <code>-ms-filter</code>, cause, do we really need <em>another</em> line of CSS here?  Especially since the plain old <code>filter</code> still works just fine...</li>
</ul>
Cheers,
Atg";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"1";s:7:"user_ip";s:15:"209.251.200.243";s:10:"user_agent";s:111:"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2.17) Gecko/20110420 Firefox/3.6.17 (.NET CLR 3.5.30729)";s:8:"referrer";s:74:"http://aarontgrogg.com/practicalcss3/text-shadow/internet-explorer-filters";s:4:"blog";s:36:"http://aarontgrogg.com/practicalcss3";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:75:"http://aarontgrogg.com/practicalcss3/text-shadow/internet-explorer-filters/";s:9:"user_role";s:25:"administrator,super_admin";s:21:"akismet_comment_nonce";s:6:"passed";s:12:"POST_comment";s:366:"Updated:
<ul><li>With IE10 support of <code>text-shadow</code> still unknown, I'm leaving the CSS selector as <code>html.ie</code> to affect all versions of IE.</li>
<li>Dumped <code>-ms-filter</code>, cause, do we really need <em>another</em> line of CSS here?  Especially since the plain old <code>filter</code> still works just fine...</li>
</ul>
Cheers,
Atg";s:11:"POST_submit";s:12:"Post Comment";s:20:"POST_comment_post_ID";s:2:"91";s:19:"POST_comment_parent";s:1:"0";s:32:"POST__wp_unfiltered_html_comment";s:10:"f62fc100d6";s:26:"POST_akismet_comment_nonce";s:10:"28e01fc760";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:35:"/practicalcss3/wp-comments-post.php";s:14:"CONTENT_LENGTH";s:3:"616";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:13:"DOCUMENT_ROOT";s:39:"/home/content/a/a/r/aarontgroggcom/html";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.7";s:20:"HTTP_ACCEPT_ENCODING";s:12:"gzip,deflate";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-us,en;q=0.5";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:11:"HTTP_COOKIE";s:0:"";s:9:"HTTP_HOST";s:15:"aarontgrogg.com";s:15:"HTTP_KEEP_ALIVE";s:3:"115";s:12:"HTTP_REFERER";s:74:"http://aarontgrogg.com/practicalcss3/text-shadow/internet-explorer-filters";s:15:"HTTP_USER_AGENT";s:111:"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2.17) Gecko/20110420 Firefox/3.6.17 (.NET CLR 3.5.30729)";s:4:"PATH";s:28:"/bin:/usr/bin:/usr/local/bin";s:9:"PATH_INFO";s:21:"/wp-comments-post.php";s:5:"PHPRC";s:39:"/home/content/a/a/r/aarontgroggcom/html";s:12:"QUERY_STRING";s:0:"";s:19:"REDIRECT_SCRIPT_URI";s:57:"http://aarontgrogg.com/practicalcss3/wp-comments-post.php";s:19:"REDIRECT_SCRIPT_URL";s:35:"/practicalcss3/wp-comments-post.php";s:15:"REDIRECT_STATUS";s:3:"200";s:12:"REDIRECT_URL";s:35:"/practicalcss3/wp-comments-post.php";s:11:"REMOTE_ADDR";s:15:"209.251.200.243";s:11:"REMOTE_PORT";s:5:"11894";s:14:"REQUEST_METHOD";s:4:"POST";s:15:"SCRIPT_FILENAME";s:60:"/home/content/a/a/r/aarontgroggcom/html/wp-comments-post.php";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:10:"SCRIPT_URI";s:57:"http://aarontgrogg.com/practicalcss3/wp-comments-post.php";s:10:"SCRIPT_URL";s:35:"/practicalcss3/wp-comments-post.php";s:11:"SERVER_ADDR";s:12:"72.167.232.6";s:12:"SERVER_ADMIN";s:26:"support@supportwebsite.com";s:11:"SERVER_NAME";s:15:"aarontgrogg.com";s:11:"SERVER_PORT";s:2:"80";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:16:"SERVER_SIGNATURE";s:67:"<ADDRESS>Apache/1.3.33 Server at aarontgrogg.com Port 80</ADDRESS>
";s:3:"SPI";s:4:"TRUE";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1305228233";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>PEOPLE.com Photo Archive</title>
		<link>http://aarontgrogg.com/practicalcss3/fin/people-archive/</link>
		<pubDate>Tue, 14 Dec 2010 02:57:51 +0000</pubDate>
		<dc:creator>test</dc:creator>
		<guid isPermaLink="false">http://localhost/aarontgrogg/practicalcss3/</guid>
		<description></description>
		<content:encoded><![CDATA[				<p><a href="../../wp-content/themes/practicalcss3/classic.html">The initial page</a> works perfectly fine as it is.  I chose it, however, because the design called for several features that are doable via pure CSS, but are effects that we have traditionally done via images, including:
					<ul><li>background gradient</li>
						<li>border-radius</li>
						<li>box-shadow</li>

					</ul>
				</p>
				<p><a href="../../wp-content/themes/practicalcss3/css3.html">Using CSS3, CSS3 PIE, and IE Filters</a>, I was able to remove <strong>all</strong> design images within the main content area.</p>
				<h2>Samples from Practical CSS3-ified CSS</h2>
				<pre>
.archive .more a .plus{float:left;width:14px;height:14px;margin-left:3px;padding-top:1px;background:#8c8c8c;color:#fff;font-family:'Trebuchet MS',sans-serif;font-size:16px;line-height:11px;text-align:center;
	border-radius: 3px;
	-moz-border-radius: 3px;
	-webkit-border-radius: 3px;
	behavior: url('../../wp-content/themes/practicalcss3/css3-pie.htc');
}
.archive #leftColumns .wrapper{float:left;width:994px;
	background:#151515;
	background:-webkit-gradient(linear, 0% 0%, 0% 100%, from(#0d0d0d), to(#171717), color-stop(.15,#2f2f2f));
	background:-moz-linear-gradient(0% 0% 270deg, #0D0D0D, #2F2F2F, #171717 70%);
	-pie-background:linear-gradient(0% 0% 270deg, #0D0D0D, #2F2F2F, #171717 70%);
	behavior: url('../../wp-content/themes/practicalcss3/css3-pie.htc');
}
.archive #leftColumn{float:left;display:inline;overflow:hidden;width:177px;margin-top:13px;padding:26px 0 186px;position:relative;z-index:2;background:#262626;border:1px solid #454545;border-left:0;
	box-shadow: 3px 0 10px #000;
	-moz-box-shadow: 3px 0 10px #000;
	-webkit-box-shadow: 3px 0 10px #000;
	border-radius: 0 12px 12px 0;
	-moz-border-radius: 0 12px 12px 0;
	-webkit-border-top-right-radius: 12px;
	-webkit-border-bottom-right-radius: 12px;
	behavior: url('../../wp-content/themes/practicalcss3/css3-pie.htc');
}
.archive #middleColumn .col .imgcont a img{border:1px solid #fff;
	box-shadow: 3px 4px 0 #E3E1E1, 6px 8px 0 #adadad;
	-moz-box-shadow: 3px 4px 0 #E3E1E1, 6px 8px 0 #adadad;
	-webkit-box-shadow: 3px 4px 0 #E3E1E1, 6px 8px 0 #adadad;
	-ms-filter: "progid:DXImageTransform.Microsoft.DropShadow(color='#E3E1E1',offX='3',offY='4')", "progid:DXImageTransform.Microsoft.DropShadow(color='#adadad',offX='6',offY='8')";
	filter: progid:DXImageTransform.Microsoft.DropShadow(color='#E3E1E1',offX='3',offY='4',positive='true'), progid:DXImageTransform.Microsoft.DropShadow(color='#adadad',offX='6',offY='8',positive='true');
}
.archive #middleColumn .col .imgcont a:hover img{border-color:#FDF89B;
	box-shadow: 3px 4px 0 #E3DA5A, 6px 8px 0 #ADA845;
	-moz-box-shadow: 3px 4px 0 #E3DA5A, 6px 8px 0 #ADA845;
	-webkit-box-shadow: 3px 4px 0 #E3DA5A, 6px 8px 0 #ADA845;
	-ms-filter: "progid:DXImageTransform.Microsoft.DropShadow(color='#E3DA5A',offX='3',offY='4')", "progid:DXImageTransform.Microsoft.DropShadow(color='#ADA845',offX='6',offY='8')";
	filter: progid:DXImageTransform.Microsoft.DropShadow(color='#E3DA5A',offX='3',offY='4',positive='true'),positive='true'), progid:DXImageTransform.Microsoft.DropShadow(color='#ADA845',offX='6',offY='8',positive='true');
}
.archive .modal{position:absolute;top:-9999px;left:-9999px;z-index:3;padding:9px;width:498px;height:504px;
	border-radius:20px;
	-moz-border-radius:20px;
	-webkit-border-radius:20px;
	background:rgba(207,207,207,.25);
	-ms-filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#3FCFCFCF,endColorstr=#3FCFCFCF);
	filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#3FCFCFCF,endColorstr=#3FCFCFCF);
	behavior: url('../../wp-content/themes/practicalcss3/css3-pie.htc');
	zoom:1;
}
.archive .modal h3{float:left;padding:0 0 0 15px;width:483px;font-size:17px;line-height:38px;font-weight:bold;color:#f1fcff;text-transform:uppercase;
	border-radius:10px 10px 0 0;
	-moz-border-radius:10px 10px 0 0;
	-webkit-border-radius:10px 10px 0 0;
	background:-webkit-gradient(linear, 0% 0%, 0% 100%, from(#ED1B23), to(#BF161C), color-stop(.55,#ED1B23));
	background:-moz-linear-gradient(0% 0% 270deg, #ED1B23, #ED1B23 55%, #BF161C 55%, #BF161C 100%);
	-pie-background:linear-gradient(0% 0% 270deg, #ED1B23, #ED1B23 55%, #BF161C 55%, #BF161C 100%);
	behavior: url('../../wp-content/themes/practicalcss3/css3-pie.htc');
	zoom:1;
}
.archive .modal .close{position:absolute;top:18px;right:24px;width:64px;font-weight:bold;font-size:10px;line-height:17px;color:#fff;text-transform:uppercase;text-decoration:none;
	border-radius:10px;
	-moz-border-radius:10px;
	-webkit-border-radius:10px;
	background:#D17D80;
	background:rgba(190,190,190,0.6);
	box-shadow:-2px 3px 3px rgba(100,100,100,0.3);
	-moz-box-shadow:-2px 3px 3px rgba(100,100,100,0.3);
	-webkit-box-shadow:-2px 3px 3px rgba(100,100,100,0.3);
	text-shadow:0 0 2px #fff;
	behavior: url('../../wp-content/themes/practicalcss3/css3-pie.htc');
	zoom:1;
}
.archive .modal .close span{float:left;margin-right:4px;width:14px;line-height:14px;font-family:Verdana,Tahoma,sans-serif;text-align:center;border:2px solid #fff;
	box-shadow:0 0 6px rgba(0,0,0,.3);
	-moz-box-shadow:0 0 6px rgba(0,0,0,.3);
	-webkit-box-shadow:0 0 6px rgba(0,0,0,.3);
	border-radius:10px;
	-moz-border-radius:10px;
	-webkit-border-radius:10px;
	behavior: url('../../wp-content/themes/practicalcss3/css3-pie.htc');
	zoom:1;
}
.archive .modal .content{clear:both;float:left;border-width:30px 15px 15px;border-style:solid;border-color:#2C2B2B;width:468px;height:422px;overflow:hidden;overflow-y:auto;background:#2C2B2B;
	border-radius:0 0 10px 10px;
	-moz-border-radius:0 0 10px 10px;
	-webkit-border-radius:0 0 10px 10px;
	behavior: url('../../wp-content/themes/practicalcss3/css3-pie.htc');
	zoom:1;
}
				</pre>
				<h2>The Results</h2>
				<p>Average after 5 loads with cleared cache and no ads:
					<table cellpadding="0" cellspacing="0" border="0" summary="Results of page-load tests">
						<thead>
							<tr><th>&nbsp;</th>
								<th>Requests</th>
								<th>Kb</th>
								<th>Seconds</th>
							</tr>
						</thead>
						<tbody>
							<tr><th>Before</th>
								<td>48</td>
								<td>418.1</td>
								<td>2.84</td>
							</tr>
							<tr><th>After</th>
								<td>42</td>
								<td>390.2</td>
								<td>2.45</td>
							</tr>
						</tbody>
					</table>
				</p>
				<p>Obviously no huge savings anywhere in the results, thanks to the efficiency of the initial code, but if those numbers are multiplied by the 30-40k times that page is viewed each month, it could be meaningful.  Additionally, if we were asked to, say, change the color of the drop-shadow effect on each of the images, it would be a simple CSS change as opposed to finding the sprite PSD, making the changes, then waiting for the image to clear cache on Akamai.</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>93</wp:post_id>
		<wp:post_date>2010-12-13 21:57:51</wp:post_date>
		<wp:post_date_gmt>2010-12-14 02:57:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>people-archive</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>14</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>eCSStender</title>
		<link>http://aarontgrogg.com/practicalcss3/rgba/ecsstender/</link>
		<pubDate>Mon, 17 Jan 2011 17:27:45 +0000</pubDate>
		<dc:creator>test</dc:creator>
		<guid isPermaLink="false">http://aarontgrogg.com/practicalcss3/</guid>
		<description></description>
		<content:encoded><![CDATA[<script src="../../wp-content/themes/practicalcss3/eCSStender.js"></script>
<script src="../../wp-content/themes/practicalcss3/eCSStender.CSS3-color.js"></script>
<style>
	div.entry-content div { margin: .75em 0; padding: 10px; border: 3px solid #444; background: #fff;}
	#example1 { background: url('../../wp-content/themes/practicalcss3/bg-pattern.jpg'); }
	#example1 p {
		background: rgb(154,154,154); /* you should always have an equivalent post-alpha color, just in case */
		background: rgba(123,123,123,.5); /* EVERYTHING! */
		zoom: 1;
	}
</style>
<p><a href="http://ecsstender.org/">eCSStender</a> is pure-JS solution that uses a series of community-created <a href="http://ecsstender.org/extensions">extensions</a> to add CSS3 features to ALL browsers, <strong>no vendor prefixes required</strong>:</p>
<pre>
&lt;!-- concatenate scripts to reduce HTTP Requests, unless using other extensions on other pages, then benefit from caching Core --&gt;
&lt;script src="../../wp-content/themes/practicalcss3/eCSStender.js"&gt;&lt;/script&gt;
&lt;script src="../../wp-content/themes/practicalcss3/eCSStender.CSS3-color.js"&gt;&lt;/script&gt;
&lt;style&gt;
#example1 { background: url('../../wp-content/themes/practicalcss3/bg-pattern.jpg'); }
#example1 p {
	background: rgb((154,154,154); /* you should always have an equivalent non-alpha color, just in case */
	background: rgba(123,123,123,.5); /* EVERYTHING! */
}
&lt;/style&gt;
</pre>
<div id="example1">
	<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
</div>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>138</wp:post_id>
		<wp:post_date>2011-01-17 12:27:45</wp:post_date>
		<wp:post_date_gmt>2011-01-17 17:27:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>ecsstender</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>43</wp:post_parent>
		<wp:menu_order>2</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
